div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Medical Conditions</label>
                  <textarea id="med_conditions" rows="2" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-red-500 focus:outline-none" 
                            placeholder="Any chronic conditions, disabilities, etc."></textarea>
                </div>
              </div>
              
              <div class="flex space-x-4 mt-6">
                <button id="saveMedical" class="bg-red-500 hover:bg-red-600 flex-1 py-3 px-6 rounded-xl text-white font-semibold transition-colors">
                  Save Medical Info
                </button>
                <button id="cancelMedical" class="border-2 border-gray-300 hover:bg-gray-50 px-6 py-3 rounded-xl font-semibold transition-colors">
                  Cancel
                </button>
              </div>
            </div>
          </div>
        </div>
      `;

      // Populate existing data
      document.getElementById('med_blood').value = app.medical.blood || '';
      document.getElementById('med_allergies').value = app.medical.allergies || '';
      document.getElementById('med_medications').value = app.medical.medications || '';
      document.getElementById('med_emergency').value = app.medical.emergency || '';
      document.getElementById('med_conditions').value = app.medical.conditions || '';

      document.getElementById('closeMedical').onclick = () => modalRoot.innerHTML = '';
      document.getElementById('cancelMedical').onclick = () => modalRoot.innerHTML = '';
      document.getElementById('saveMedical').onclick = () => {
        app.medical.blood = document.getElementById('med_blood').value;
        app.medical.allergies = document.getElementById('med_allergies').value;
        app.medical.medications = document.getElementById('med_medications').value;
        app.medical.emergency = document.getElementById('med_emergency').value;
        app.medical.conditions = document.getElementById('med_conditions').value;
        
        saveAll();
        render();
        modalRoot.innerHTML = '';
        toast('Medical information updated!', 'success');
      };
    }

    /* ---------- Utility Functions ---------- */
    function showWeatherData(location, date) {
      const generateWeather = (baseTemp) => ({
        temp: Math.round(baseTemp + (Math.random() - 0.5) * 10),
        condition: ['Sunny', 'Partly Cloudy', 'Cloudy', 'Rainy'][Math.floor(Math.random() * 4)],
        humidity: Math.round(40 + Math.random() * 50),
        windSpeed: Math.round(5 + Math.random() * 15)
      });

      const baseTemp = 20 + Math.random() * 15;
      const yesterday = generateWeather(baseTemp - 2);
      const today = generateWeather(baseTemp);  
      const tomorrow = generateWeather(baseTemp + 1);

      const weatherHtml = `
        <div class="glass-card p-6 text-center">
          <div class="text-sm text-gray-600 font-medium mb-1">Location</div>
          <div class="font-bold text-xl text-blue-600">${location}</div>
          <div class="text-xs text-gray-500 mt-1">Weather Data for ${date}</div>
        </div>
        
        <div class="glass-card p-6 text-center">
          <div class="text-sm text-gray-600 font-medium mb-1">Yesterday</div>
          <div class="font-bold text-xl text-gray-800">${yesterday.temp}¬∞C</div>
          <div class="text-sm text-gray-600">${yesterday.condition}</div>
          <div class="text-xs text-gray-500 mt-1">${yesterday.humidity}% humidity</div>
        </div>
        
        <div class="glass-card p-6 text-center border-2 border-blue-200">
          <div class="text-sm text-blue-600 font-bold mb-1">Today</div>
          <div class="font-bold text-2xl text-blue-700">${today.temp}¬∞C</div>
          <div class="text-sm text-blue-600 font-medium">${today.condition}</div>
          <div class="text-xs text-blue-500 mt-1">${today.humidity}% ‚Ä¢ ${today.windSpeed} km/h</div>
        </div>
        
        <div class="glass-card p-6 text-center">
          <div class="text-sm text-gray-600 font-medium mb-1">Tomorrow</div>
          <div class="font-bold text-xl text-gray-800">${tomorrow.temp}¬∞C</div>
          <div class="text-sm text-gray-600">${tomorrow.condition}</div>
          <div class="text-xs text-gray-500 mt-1">${tomorrow.humidity}% humidity</div>
        </div>
      `;

      const alertsHtml = `
        <div class="glass-card p-6 ${today.condition === 'Rainy' ? 'border-l-4 border-yellow-500' : 'border-l-4 border-green-500'}">
          <h4 class="font-semibold ${today.condition === 'Rainy' ? 'text-yellow-800' : 'text-green-800'} mb-3">
            <i class="fas ${today.condition === 'Rainy' ? 'fa-cloud-rain text-yellow-600' : 'fa-sun text-green-600'} mr-2"></i>
            Weather Advisory
          </h4>
          <div class="text-sm ${today.condition === 'Rainy' ? 'text-yellow-700' : 'text-green-700'}">
            ${today.condition === 'Rainy' ? 
              '‚ö†Ô∏è Rain expected - Carry umbrella and wear appropriate footwear' : 
              '‚úÖ Good weather conditions for outdoor activities'}
          </div>
          ${today.temp > 35 ? '<div class="text-sm text-red-700 mt-2">üå°Ô∏è High temperature - Stay hydrated and avoid direct sun exposure</div>' : ''}
        </div>
      `;

      document.getElementById('weatherResult').innerHTML = weatherHtml;
      document.getElementById('weatherAlerts').innerHTML = alertsHtml;

      app.alerts.push({
        id: uid(),
        type: 'info',
        message: `Weather checked for ${location} on ${date} - ${today.temp}¬∞C, ${today.condition}`,
        time: new Date().toLocaleString()
      });
      saveAll();
    }

    function renderTripTemplates() {
      const templates = [
        {
          name: 'Weekend Goa Trip',
          destination: 'Goa, India',
          type: 'friends',
          transport: 'flight',
          color: 'blue'
        },
        {
          name: 'Kerala Backwaters',
          destination: 'Kerala, India', 
          type: 'family',
          transport: 'train',
          color: 'green'
        },
        {
          name: 'Rajasthan Heritage',
          destination: 'Jaipur, India',
          type: 'family',
          transport: 'car',
          color: 'purple'
        }
      ];

      const templatesEl = document.getElementById('tripTemplates');
      if (templatesEl) {
        templatesEl.innerHTML = templates.map(template => `
          <div class="glass-card p-4 hover:shadow-lg transition-all cursor-pointer border-l-4 border-${template.color}-500" data-template='${JSON.stringify(template)}'>
            <h5 class="font-semibold text-gray-800 mb-2">${template.name}</h5>
            <div class="text-xs text-gray-600 space-y-1">
              <div><i class="fas fa-map-marker-alt mr-1"></i> ${template.destination}</div>
              <div><i class="fas fa-users mr-1"></i> ${template.type} trip</div>
              <div><i class="fas fa-plane mr-1"></i> ${template.transport}</div>
            </div>
            <button class="mt-3 text-sm text-${template.color}-600 hover:text-${template.color}-800 font-medium">
              <i class="fas fa-plus mr-1"></i>Use Template
            </button>
          </div>
        `).join('');

        // Handle template clicks
        templatesEl.querySelectorAll('[data-template]').forEach(el => {
          el.onclick = () => {
            const template = JSON.parse(el.dataset.template);
            document.getElementById('trip_name').value = template.name;
            document.getElementById('trip_destination').value = template.destination;
            document.getElementById('trip_type').value = template.type;
            document.getElementById('trip_transport').value = template.transport;
            
            const today = new Date();
            const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
            const endDate = new Date(nextWeek.getTime() + 2 * 24 * 60 * 60 * 1000);
            
            document.getElementById('trip_start').value = nextWeek.toISOString().slice(0, 10);
            document.getElementById('trip_end').value = endDate.toISOString().slice(0, 10);
            
            toast('Template applied! Modify as needed.', 'info');
          };
        });
      }
    }

    function editTrip(tripId) {
      const trip = app.savedTrips.find(t => t.id === tripId);
      if (!trip) return;
      
      app.tab = 'plan';
      render();
      
      setTimeout(() => {
        document.getElementById('trip_name').value = trip.name || '';
        document.getElementById('trip_start').value = trip.start || '';
        document.getElementById('trip_end').value = trip.end || '';
        document.getElementById('trip_destination').value = trip.destination || '';
        document.getElementById('trip_type').value = trip.type || '';
        document.getElementById('trip_transport').value = trip.transport || '';
        document.getElementById('trip_stops').value = (trip.stops || []).join(', ');
        document.getElementById('trip_notes').value = trip.notes || '';
        
        // Add members to the list
        const membersList = document.getElementById('membersList');
        membersList.innerHTML = '';
        
        (trip.members || []).forEach(member => {
          const memberId = uid();
          const memberDiv = document.createElement('div');
          memberDiv.className = 'flex items-center justify-between bg-gray-50 p-3 rounded-lg border';
          memberDiv.id = 'member-' + memberId;
          memberDiv.dataset.memberData = JSON.stringify({...member, id: memberId});
          
          memberDiv.innerHTML = `
            <div class="flex items-center space-x-3">
              <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <span class="text-blue-600 font-semibold text-sm">${member.name.charAt(0)}</span>
              </div>
              <div>
                <div class="font-medium text-gray-800">${member.name}</div>
                <div class="text-gray-500 text-sm">${member.tid}</div>
              </div>
            </div>
            <button class="text-red-600 hover:text-red-800 p-1" data-remove="${memberId}">
              <i class="fas fa-times"></i>
            </button>
          `;
          
          membersList.appendChild(memberDiv);
        });
        
        // Remove the trip from saved trips (will be re-added on save)
        app.savedTrips = app.savedTrips.filter(t => t.id !== tripId);
        saveAll();
        
        toast('Trip loaded for editing', 'info');
      }, 100);
    }

    function markTripCompleted(tripId) {
      const trip = app.savedTrips.find(t => t.id === tripId);
      if (!trip) return;
      
      const completedTrip = {
        ...trip,
        completedOn: new Date().toISOString().slice(0, 10),
        comments: []
      };
      
      app.pastTrips.push(completedTrip);
      app.savedTrips = app.savedTrips.filter(t => t.id !== tripId);
      saveAll();
      
      toast('Trip completed and moved to Travel History!', 'success');
      render();
    }

    function showTripDetailModal(trip) {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-4xl max-h-[90vh] overflow-auto">
            <div class="p-8">
              <div class="flex justify-between items-start mb-6">
                <div>
                  <h3 class="text-2xl font-bold text-gray-800 mb-2">${trip.name}</h3>
                  <div class="text-gray-600">
                    <i class="fas fa-map-marker-alt mr-2"></i>${trip.destination} ‚Ä¢ 
                    <i class="fas fa-calendar mr-2 ml-3"></i>${trip.start} ‚Üí ${trip.end}
                  </div>
                </div>
                <button id="closeTripDetail" class="text-gray-400 hover:text-gray-600 text-xl">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <div class="grid md:grid-cols-2 gap-8">
                <div>
                  <h4 class="text-lg font-semibold text-gray-800 mb-4">Trip Information</h4>
                  <div class="space-y-3 mb-6">
                    <div class="flex items-center space-x-3">
                      <i class="fas fa-users text-blue-600 w-5"></i>
                      <span><strong>Type:</strong> ${trip.type}</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <i class="fas fa-route text-green-600 w-5"></i>
                      <span><strong>Transport:</strong> ${trip.transport || 'Not specified'}</span>
                    </div>
                    <div class="flex items-center space-x-3">
                      <i class="fas fa-map-signs w-5" style="color: var(--saffron)"></i>
                      <span><strong>Stops:</strong> ${trip.stops?.join(', ') || 'Direct trip'}</span>
                    </div>
                  </div>
                  
                  ${trip.notes ? `
                    <h4 class="text-lg font-semibold text-gray-800 mb-3">Notes</h4>
                    <div class="p-4 bg-gray-50 rounded-xl mb-6">
                      <p class="text-gray-700">${trip.notes}</p>
                    </div>
                  ` : ''}
                </div>
                
                <div>
                  <h4 class="text-lg font-semibold text-gray-800 mb-4">Travel Companions (${trip.members?.length || 0})</h4>
                  <div class="space-y-3 mb-6">
                    ${(trip.members || []).map(member => `
                      <div class="flex items-center space-x-3 p-3 rounded-lg" style="background-color: rgba(255, 153, 51, 0.1)">
                        <div class="w-10 h-10 gradient-saffron rounded-full flex items-center justify-center">
                          <span class="text-white font-bold">${member.name.charAt(0)}</span>
                        </div>
                        <div>
                          <div class="font-semibold text-gray-800">${member.name}</div>
                          <div class="text-sm text-gray-600">${member.tid}</div>
                        </div>
                      </div>
                    `).join('')}
                    ${(trip.members || []).length === 0 ? '<div class="text-gray-500 italic">Solo trip</div>' : ''}
                  </div>
                  
                  <div class="space-y-3">
                    <button id="editTripModal" class="w-full border-2 hover:bg-blue-50 py-3 px-4 rounded-xl font-semibold transition-colors" style="border-color: var(--saffron); color: var(--saffron)">
                      <i class="fas fa-edit mr-2"></i>Edit Trip Details
                    </button>
                    <button id="completeTripModal" class="w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-xl font-semibold transition-colors">
                      <i class="fas fa-check mr-2"></i>Mark as Completed
                    </button>
                    <button id="deleteTripModal" class="w-full bg-red-500 hover:bg-red-600 text-white py-3 px-4 rounded-xl font-semibold transition-colors">
                      <i class="fas fa-trash mr-2"></i>Delete Trip
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;

      document.getElementById('closeTripDetail').onclick = () => modalRoot.innerHTML = '';
      document.getElementById('editTripModal').onclick = () => { 
        modalRoot.innerHTML = ''; 
        editTrip(trip.id); 
      };
      document.getElementById('completeTripModal').onclick = () => { 
        modalRoot.innerHTML = ''; 
        markTripCompleted(trip.id); 
      };
      document.getElementById('deleteTripModal').onclick = () => {
        app.savedTrips = app.savedTrips.filter(t => t.id !== trip.id);
        saveAll();
        modalRoot.innerHTML = '';
        render();
        toast('Trip deleted');
      };
    }

    function showPastTripDetailModal(trip) {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-4xl max-h-[90vh] overflow-auto">
            <div class="p-8">
              <div class="flex justify-between items-start mb-6">
                <div>
                  <h3 class="text-2xl font-bold text-gray-800 mb-2">${trip.name}</h3>
                  <div class="text-gray-600">
                    <i class="fas fa-map-marker-alt mr-2"></i>${trip.destination} ‚Ä¢ 
                    <i class="fas fa-calendar mr-2 ml-3"></i>${trip.start} ‚Üí ${trip.end} ‚Ä¢ 
                    <i class="fas fa-check-circle text-green-600 mr-1 ml-3"></i>Completed ${trip.completedOn}
                  </div>
                </div>
                <button id="closePastDetail" class="text-gray-400 hover:text-gray-600 text-xl">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <div class="mb-8">
                <h4 class="text-lg font-semibold text-gray-800 mb-4">Trip Summary</h4>
                <div class="grid md:grid-cols-3 gap-6 text-sm">
                  <div class="p-4 bg-blue-50 rounded-xl">
                    <div class="font-semibold text-blue-800">Trip Type</div>
                    <div class="text-blue-600">${trip.type}</div>
                  </div>
                  <div class="p-4 bg-green-50 rounded-xl">
                    <div class="font-semibold text-green-800">Transport</div>
                    <div class="text-green-600">${trip.transport || 'Not specified'}</div>
                  </div>
                  <div class="p-4 rounded-xl" style="background-color: rgba(255, 153, 51, 0.1)">
                    <div class="font-semibold" style="color: var(--deepgold)">Group Size</div>
                    <div style="color: var(--saffron)">${trip.members?.length || 1} travelers</div>
                  </div>
                </div>
                
                ${trip.notes ? `
                  <div class="mt-6">
                    <h4 class="text-lg font-semibold text-gray-800 mb-3">Original Trip Notes</h4>
                    <div class="p-4 bg-gray-50 rounded-xl">
                      <p class="text-gray-700">${trip.notes}</p>
                    </div>
                  </div>
                ` : ''}
              </div>
              
              <div class="border-t pt-6">
                <h4 class="text-lg font-semibold text-gray-800 mb-4">Travel Memories & Comments</h4>
                <div id="pastTripComments" class="space-y-3 mb-6 max-h-60 overflow-auto">
                  ${(trip.comments || []).map(comment => `
                    <div class="p-4 rounded-xl border-l-4" style="background-color: rgba(255, 153, 51, 0.1); border-color: var(--saffron)">
                      <div class="text-gray-700">${comment}</div>
                      <div class="text-xs mt-2" style="color: var(--saffron)">Added recently</div>
                    </div>
                  `).join('')}
                  ${(trip.comments || []).length === 0 ? '<div class="text-center py-8 text-gray-500 italic">No memories shared yet. Add your first memory below!</div>' : ''}
                </div>
                
                <div class="flex space-x-4">
                  <input id="newPastComment" class="flex-1 px-4 py-3 rounded-xl border-2 border-gray-200 focus:outline-none" style="focus:border-color: var(--saffron)" 
                         placeholder="Share your experience, photos, memories..." />
                  <button id="addPastComment" class="btn-primary px-6 py-3 rounded-xl text-white font-semibold">
                    <i class="fas fa-plus mr-1"></i>Add Memory
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;

      document.getElementById('closePastDetail').onclick = () => modalRoot.innerHTML = '';
      
      document.getElementById('addPastComment').onclick = () => {
        const commentInput = document.getElementById('newPastComment');
        const comment = commentInput.value.trim();
        
        if (!comment) return;
        
        const pastTrip = app.pastTrips.find(t => t.id === trip.id);
        if (pastTrip) {
          pastTrip.comments = pastTrip.comments || [];
          pastTrip.comments.push(comment);
          saveAll();
          
          // Refresh the modal content
          showPastTripDetailModal(pastTrip);
          toast('Memory added!');
        }
      };
    }

    function openIncidentDetailModal(incident) {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-5xl max-h-[90vh] overflow-auto">
            <div class="p-8">
              <div class="flex justify-between items-start mb-6">
                <div>
                  <h3 class="text-2xl font-bold text-gray-800 mb-2">${incident.title}</h3>
                  <div class="text-gray-600">
                    <i class="fas fa-map-marker-alt mr-2"></i>${incident.place} ‚Ä¢ 
                    <i class="fas fa-user mr-2 ml-3"></i>Reported by ${incident.user} ‚Ä¢ 
                    <i class="fas fa-calendar mr-2 ml-3"></i>${incident.date}
                  </div>
                </div>
                <button id="closeIncident" class="text-gray-400 hover:text-gray-600 text-xl">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <div class="grid md:grid-cols-2 gap-8">
                <div>
                  <div class="w-full h-80 bg-gray-100 rounded-xl shadow-lg mb-6 flex items-center justify-center">
                    <div class="text-center text-gray-500">
                      <i class="fas fa-image text-4xl mb-2"></i>
                      <p>Photo evidence would appear here</p>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h4 class="text-lg font-semibold text-gray-800 mb-4">Incident Description</h4>
                  <div class="p-4 bg-gray-50 rounded-xl mb-6">
                    <p class="text-gray-700 leading-relaxed">${incident.description}</p>
                  </div>
                  
                  <div class="flex flex-wrap gap-2 mb-6">
                    <span class="${getIncidentTypeColor(incident.type)} rounded-full text-sm font-medium px-3 py-1">${incident.type}</span>
                    <span class="px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm font-medium">${incident.priority} Priority</span>
                    <span class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-medium">Active</span>
                  </div>
                  
                  <div class="space-y-3">
                    <h4 class="text-lg font-semibold text-gray-800 mb-3">Take Action</h4>
                    <button id="acknowledgeIncident" class="w-full bg-green-500 hover:bg-green-600 text-white py-3 px-4 rounded-xl font-semibold transition-colors">
                      <i class="fas fa-check mr-2"></i>Acknowledge Incident
                    </button>
                    <button id="reportToAuthorities" class="w-full hover:bg-orange-600 text-white py-3 px-4 rounded-xl font-semibold transition-colors" style="background-color: var(--saffron)">
                      <i class="fas fa-exclamation-triangle mr-2"></i>Report to Authorities  
                    </button>
                    <button id="shareIncident" class="w-full border-2 border-gray-300 hover:bg-gray-50 py-3 px-4 rounded-xl font-semibold transition-colors">
                      <i class="fas fa-share-alt mr-2"></i>Share with Contacts
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;

      document.getElementById('closeIncident').onclick = () => modalRoot.innerHTML = '';
      
      document.getElementById('acknowledgeIncident').onclick = () => {
        toast('Incident acknowledged - Thank you for staying informed!', 'success');
        app.alerts.push({
          id: uid(),
          type: 'info',
          message: `You acknowledged incident: ${incident.title}`,
          time: new Date().toLocaleString()
        });
        saveAll();
        modalRoot.innerHTML = '';
        render();
      };
      
      document.getElementById('reportToAuthorities').onclick = () => {
        toast('Incident reported to local authorities!', 'warning');
        app.alerts.push({
          id: uid(),
          type: 'emergency',
          message: `Reported to authorities: ${incident.title}`,
          time: new Date().toLocaleString()
        });
        saveAll();
        modalRoot.innerHTML = '';
        render();
      };
      
      document.getElementById('shareIncident').onclick = () => {
        toast('Incident details shared with your emergency contacts!', 'info');
        modalRoot.innerHTML = '';
      };
    }

    /* ---------- Initialization ---------- */
    function init() {
      generateMockIncidents();
      
      // Add sample trips if none exist
      if (app.savedTrips.length === 0) {
        app.savedTrips.push({
          id: uid(),
          name: 'Goa Beach Holiday',
          destination: 'Goa, India',
          start: '2025-12-20',
          end: '2025-12-23', 
          type: 'friends',
          transport: 'flight',
          stops: ['Mumbai'],
          notes: 'Beach resort booking confirmed. Looking forward to water sports and relaxation.',
          members: [
            {name: 'Aman Kumar', tid: 'SR123456', id: uid()},
            {name: 'Neha Singh', tid: 'SR234567', id: uid()}
          ],
          createdAt: new Date().toISOString()
        });

        app.savedTrips.push({
          id: uid(),
          name: 'Kerala Family Trip',
          destination: 'Kerala, India', 
          start: '2025-11-10',
          end: '2025-11-17',
          type: 'family',
          transport: 'train',
          stops: ['Chennai', 'Kochi'],
          notes: 'Houseboat booking for 2 days. Planning to visit tea gardens and spice plantations.',
          members: [
            {name: 'Rahul Sharma', tid: 'SR345678', id: uid()},
            {name: 'Priya Sharma', tid: 'SR456789', id: uid()}
          ],
          createdAt: new Date().toISOString()
        });

        saveAll();
      }
      
      // Set today's date as default for weather
      const today = new Date().toISOString().slice(0, 10);
      setTimeout(() => {
        const weatherDateEl = document.getElementById('weather_date');
        if (weatherDateEl) weatherDateEl.value = today;
      }, 100);
      
      render();
    }

    /* ---------- Start Application ---------- */
    document.addEventListener('DOMContentLoaded', init);
  </script>
</body>
</html>      const alertsIcon = document.getElementById('alertsIcon');
      if (alertsIcon) alertsIcon.onclick = () => { app.tab = 'alerts'; render(); };

      const sosIcon = document.getElementById('sosIcon');
      if (sosIcon) sosIcon.onclick = () => { app.tab = 'sos'; render(); };

      // Profile edit
      const editProfile = document.getElementById('editProfile');
      if (editProfile) editProfile.onclick = () => openProfileModal();

      const editMedical = document.getElementById('editMedical');
      if (editMedical) editMedical.onclick = () => openMedicalModal();

      // Continue with all the original handlers...
      attachOriginalHandlers();
    }

    function attachOriginalHandlers() {
      // Location request
      const requestLocation = document.getElementById('requestLocation');
      if (requestLocation) {
        requestLocation.onclick = () => {
          if (app.locationTracking) {
            toast('Location access requested', 'info');
            app.alerts.push({
              id: uid(), 
              type: 'info', 
              message: 'Live location tracking activated near JC Bose University', 
              time: new Date().toLocaleString()
            });
            saveAll();
            updateUI();
          } else {
            toast('Please enable location tracking first', 'warning');
          }
        };
      }

      // Weather handlers
      const getWeather = document.getElementById('getWeather');
      if (getWeather) {
        getWeather.onclick = () => {
          const location = document.getElementById('weather_location').value || 'Faridabad';
          const date = document.getElementById('weather_date').value || new Date().toISOString().slice(0,10);
          showWeatherData(location, date);
        };
      }

      // Area scan rescan
      const rescanArea = document.getElementById('rescanArea');
      if (rescanArea) {
        rescanArea.onclick = () => {
          if (!app.locationTracking) {
            toast('Please enable location tracking for area analysis', 'warning');
            return;
          }
          
          const safety = 30 + Math.random() * 60;
          const scam = 10 + Math.random() * 50;
          const network = 60 + Math.random() * 40;
          const crowd = 20 + Math.random() * 70;
          
          document.getElementById('safetyBar').style.width = safety + '%';
          document.getElementById('scamBar').style.width = scam + '%';
          document.getElementById('netBar').style.width = network + '%';
          document.getElementById('crowdBar').style.width = crowd + '%';
          
          document.getElementById('safetyScore').textContent = (safety/10).toFixed(1) + '/10';
          document.getElementById('scamScore').textContent = (scam/10).toFixed(1) + '/10';
          document.getElementById('networkScore').textContent = (network/10).toFixed(1) + '/10';
          document.getElementById('crowdScore').textContent = (crowd/10).toFixed(1) + '/10';
          
          toast('Area scan completed - metrics updated');
        };
      }

      // Incident handlers
      document.querySelectorAll('[data-open]').forEach(btn => {
        btn.onclick = () => {
          const incidentId = btn.dataset.open;
          const incident = app.incidents.find(i => i.id === incidentId);
          if (incident) openIncidentDetailModal(incident);
        };
      });

      // Alert handlers
      document.querySelectorAll('[data-clear]').forEach(btn => {
        btn.onclick = () => {
          const alertId = btn.dataset.clear;
          app.alerts = app.alerts.filter(a => a.id !== alertId);
          saveAll();
          render();
        };
      });

      const clearAllAlerts = document.getElementById('clearAllAlerts');
      if (clearAllAlerts) {
        clearAllAlerts.onclick = () => {
          app.alerts = [];
          saveAll();
          render();
          toast('All alerts cleared');
        };
      }

      // SOS handlers
      document.querySelectorAll('[data-sos]').forEach(btn => {
        btn.onclick = () => {
          const sosType = btn.dataset.sos;
          const sosLabels = {
            medical: 'Medical Emergency Alert',
            police: 'Security Emergency Alert',
            fire: 'Fire Emergency Alert',
            network: 'Communication Emergency',
            battery: 'Device Emergency Alert',
            general: 'General Emergency Alert'
          };
          
          const label = sosLabels[sosType] || 'Emergency Alert';
          toast(`SOS: ${label} - Help has been notified!`, 'success');
          
          app.alerts.push({
            id: uid(),
            type: 'emergency',
            message: `SOS Triggered: ${label}`,
            time: new Date().toLocaleString()
          });
          
          app.sosCount++;
          saveAll();
          render();
        };
      });

      // Trip planning handlers
      const addMember = document.getElementById('addMember');
      if (addMember) {
        addMember.onclick = () => {
          const name = document.getElementById('memberName').value.trim();
          const tid = document.getElementById('memberTid').value.trim() || 'SR' + Math.floor(100000 + Math.random()*900000);
          
          if (!name) return toast('Please enter member name', 'error');
          
          const membersList = document.getElementById('membersList');
          const memberId = uid();
          
          const memberDiv = document.createElement('div');
          memberDiv.className = 'flex items-center justify-between bg-gray-50 p-3 rounded-lg border';
          memberDiv.id = 'member-' + memberId;
          memberDiv.dataset.memberData = JSON.stringify({name, tid, id: memberId});
          
          memberDiv.innerHTML = `
            <div class="flex items-center space-x-3">
              <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <span class="text-blue-600 font-semibold text-sm">${name.charAt(0)}</span>
              </div>
              <div>
                <div class="font-medium text-gray-800">${name}</div>
                <div class="text-gray-500 text-sm">${tid}</div>
              </div>
            </div>
            <button class="text-red-600 hover:text-red-800 p-1" data-remove="${memberId}">
              <i class="fas fa-times"></i>
            </button>
          `;
          
          membersList.appendChild(memberDiv);
          document.getElementById('memberName').value = '';
          document.getElementById('memberTid').value = '';
        };
      }

      // Handle member removal
      document.addEventListener('click', (e) => {
        if (e.target.dataset.remove || e.target.parentElement.dataset.remove) {
          const memberId = e.target.dataset.remove || e.target.parentElement.dataset.remove;
          const memberEl = document.getElementById('member-' + memberId);
          if (memberEl) memberEl.remove();
        }
      });

      // Save trip
      const saveTripBtn = document.getElementById('saveTripBtn');
      if (saveTripBtn) {
        saveTripBtn.onclick = () => {
          const name = document.getElementById('trip_name').value.trim();
          const start = document.getElementById('trip_start').value;
          const end = document.getElementById('trip_end').value;
          const destination = document.getElementById('trip_destination').value.trim();
          const type = document.getElementById('trip_type').value;
          const transport = document.getElementById('trip_transport').value;
          const stops = document.getElementById('trip_stops').value.split(',').map(s => s.trim()).filter(Boolean);
          const notes = document.getElementById('trip_notes').value.trim();
          
          if (!name || !start || !end || !destination) {
            return toast('Please fill all required fields', 'error');
          }
          
          // Collect members
          const memberElements = document.querySelectorAll('#membersList > div');
          const members = Array.from(memberElements).map(el => JSON.parse(el.dataset.memberData));
          
          const trip = {
            id: uid(),
            name,
            start, 
            end,
            destination,
            type,
            transport,
            stops,
            notes,
            members,
            createdAt: new Date().toISOString()
          };
          
          app.savedTrips.push(trip);
          saveAll();
          toast('Trip saved successfully!');
          
          // Clear form
          document.getElementById('tripPlanForm').reset();
          document.getElementById('membersList').innerHTML = '';
          
          render();
        };
      }

      // Start journey
      const startJourneyBtn = document.getElementById('startJourneyBtn');
      if (startJourneyBtn) {
        startJourneyBtn.onclick = () => {
          const name = document.getElementById('trip_name').value.trim();
          if (!name) return toast('Enter trip name first', 'warning');
          
          toast('Journey started! Stay safe and enjoy your trip!', 'success');
          app.alerts.push({
            id: uid(),
            type: 'info',
            message: `Journey started for trip: ${name}`,
            time: new Date().toLocaleString()
          });
          saveAll();
          render();
        };
      }

      // Clear trip form  
      const clearTripBtn = document.getElementById('clearTripBtn');
      if (clearTripBtn) {
        clearTripBtn.onclick = () => {
          document.getElementById('tripPlanForm').reset();
          document.getElementById('membersList').innerHTML = '';
          toast('Form cleared', 'info');
        };
      }

      // Saved trips handlers
      document.querySelectorAll('[data-read]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.read;
          const trip = app.savedTrips.find(t => t.id === tripId);
          if (trip) showTripDetailModal(trip);
        };
      });

      document.querySelectorAll('[data-edit]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.edit;
          editTrip(tripId);
        };
      });

      document.querySelectorAll('[data-delete]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.delete;
          app.savedTrips = app.savedTrips.filter(t => t.id !== tripId);
          saveAll();
          render();
          toast('Trip deleted');
        };
      });

      document.querySelectorAll('[data-complete]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.complete;
          markTripCompleted(tripId);
        };
      });

      // Past trips handlers
      document.querySelectorAll('[data-viewpast]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.viewpast;
          const trip = app.pastTrips.find(t => t.id === tripId);
          if (trip) showPastTripDetailModal(trip);
        };
      });

      document.querySelectorAll('[data-deletepast]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.deletepast;
          app.pastTrips = app.pastTrips.filter(t => t.id !== tripId);
          saveAll();
          render();
          toast('Past trip deleted');
        };
      });

      document.querySelectorAll('[data-addcomment]').forEach(btn => {
        btn.onclick = () => {
          const tripId = btn.dataset.addcomment;
          const commentInput = document.getElementById('addComment-' + tripId);
          const comment = commentInput.value.trim();
          
          if (!comment) return;
          
          const trip = app.pastTrips.find(t => t.id === tripId);
          if (trip) {
            trip.comments = trip.comments || [];
            trip.comments.push(comment);
            saveAll();
            render();
            toast('Memory added!');
          }
        };
      });

      // Generic tab navigation handlers
      document.querySelectorAll('[data-tab]').forEach(btn => {
        btn.onclick = () => { 
          app.tab = btn.dataset.tab; 
          render(); 
        };
      });

      // Render trip templates
      renderTripTemplates();
    }

    /* ---------- Incident Report Modal ---------- */
    function openIncidentReportModal() {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-2xl max-h-[90vh] overflow-auto incident-form">
            <div class="p-8">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-2xl font-bold text-gray-800">Report New Incident</h3>
                <button id="closeIncidentReport" class="text-gray-400 hover:text-gray-600 text-xl">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <form id="incidentReportForm" class="space-y-6">
                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Incident Type *</label>
                    <select id="incident_type" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none">
                      <option value="">Select Type</option>
                      <option value="Climate">Climate/Weather Related</option>
                      <option value="Crime">Crime/Security</option>
                      <option value="Scam">Scam/Fraud Attempt</option>
                      <option value="Fraud">Financial Fraud</option>
                    </select>
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Priority Level *</label>
                    <select id="incident_priority" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none">
                      <option value="">Select Priority</option>
                      <option value="Low">Low</option>
                      <option value="Medium">Medium</option>
                      <option value="High">High</option>
                    </select>
                  </div>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Incident Title *</label>
                  <input id="incident_title" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                         placeholder="Brief description of the incident" />
                </div>

                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Location *</label>
                    <input id="incident_location" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                           placeholder="Where did this happen?" value="${app.locationTracking ? 'JC Bose University Area' : ''}" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Date & Time *</label>
                    <input id="incident_datetime" type="datetime-local" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Detailed Description *</label>
                  <textarea id="incident_description" rows="4" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                            placeholder="Provide as much detail as possible about what happened, when, and any other relevant information..."></textarea>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Upload Photo (Optional)</label>
                  <input id="incident_photo" type="file" accept="image/*" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  <p class="text-xs text-gray-500 mt-1">Upload any relevant photos or evidence</p>
                </div>

                <div class="border-t pt-6">
                  <div class="flex items-start space-x-3 mb-4">
                    <input type="checkbox" id="incident_anonymous" class="mt-1">
                    <div class="text-sm">
                      <label for="incident_anonymous" class="font-medium text-gray-700">Report Anonymously</label>
                      <p class="text-gray-500">Your name will not be displayed with this report</p>
                    </div>
                  </div>
                  
                  <div class="flex items-start space-x-3">
                    <input type="checkbox" id="incident_authorities" class="mt-1">
                    <div class="text-sm">
                      <label for="incident_authorities" class="font-medium text-gray-700">Alert Authorities</label>
                      <p class="text-gray-500">Automatically notify relevant authorities about this incident</p>
                    </div>
                  </div>
                </div>

                <div class="flex space-x-4 pt-6 border-t">
                  <button type="button" id="submitIncidentReport" class="btn-primary flex-1 py-3 px-6 rounded-xl text-white font-semibold">
                    <i class="fas fa-paper-plane mr-2"></i>Submit Report
                  </button>
                  <button type="button" id="cancelIncidentReport" class="border-2 border-gray-300 hover:bg-gray-50 py-3 px-6 rounded-xl font-semibold transition-colors">
                    Cancel
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      `;

      // Set current datetime
      const now = new Date();
      now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
      document.getElementById('incident_datetime').value = now.toISOString().slice(0, 16);

      document.getElementById('closeIncidentReport').onclick = () => modalRoot.innerHTML = '';
      document.getElementById('cancelIncidentReport').onclick = () => modalRoot.innerHTML = '';
      
      document.getElementById('submitIncidentReport').onclick = () => {
        const type = document.getElementById('incident_type').value;
        const priority = document.getElementById('incident_priority').value;
        const title = document.getElementById('incident_title').value.trim();
        const location = document.getElementById('incident_location').value.trim();
        const datetime = document.getElementById('incident_datetime').value;
        const description = document.getElementById('incident_description').value.trim();
        const anonymous = document.getElementById('incident_anonymous').checked;
        const alertAuthorities = document.getElementById('incident_authorities').checked;
        
        if (!type || !priority || !title || !location || !datetime || !description) {
          return toast('Please fill all required fields', 'error');
        }
        
        const newIncident = {
          id: uid(),
          user: anonymous ? 'Anonymous User' : (app.personal.fullname || 'Guest User'),
          place: location,
          date: datetime.split('T')[0],
          title: title,
          type: type,
          priority: priority,
          description: description,
          userReported: true,
          timeAgo: 'Just now'
        };
        
        app.incidents.unshift(newIncident); // Add to beginning
        saveAll();
        
        if (alertAuthorities) {
          app.alerts.push({
            id: uid(),
            type: 'info',
            message: `Authorities notified about: ${title}`,
            time: new Date().toLocaleString()
          });
          saveAll();
        }
        
        modalRoot.innerHTML = '';
        render();
        toast('Incident report submitted successfully!', 'success');
      };
    }

    /* ---------- Modal Functions ---------- */
    function openProfileModal() {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-2xl max-h-[90vh] overflow-auto">
            <div class="p-8">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-2xl font-bold text-gray-800">Complete Your Profile</h3>
                <button id="closeProfile" class="text-gray-400 hover:text-gray-600 text-xl">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <form id="profileForm" class="space-y-6">
                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Full Name *</label>
                    <input id="p_fullname" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Email Address *</label>
                    <input id="p_email" type="email" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                </div>
                
                <div class="grid md:grid-cols-3 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Date of Birth *</label>
                    <input id="p_dob" type="date" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Gender *</label>
                    <select id="p_gender" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none">
                      <option value="">Select</option>
                      <option>Male</option>
                      <option>Female</option>
                      <option>Other</option>
                    </select>
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Mobile Number *</label>
                    <input id="p_mobile" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Current Address *</label>
                  <textarea id="p_address" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" rows="2"></textarea>
                </div>

                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Aadhaar Number</label>
                    <input id="p_aadhaar" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" placeholder="xxxx-xxxx-xxxx" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Emergency Contact</label>
                    <input id="p_emg_phone" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                </div>
                
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Suraksha Tourist ID</label>
                  <div class="flex gap-3">
                    <input id="p_tid" readonly class="flex-1 px-4 py-3 rounded-xl border-2 border-gray-200 bg-gray-50" placeholder="Click Generate" />
                    <button type="button" id="generateTid" class="btn-primary px-6 py-3 rounded-xl text-white font-medium">
                      Generate ID
                    </button>
                  </div>
                </div>
              </form>

              <div class="flex space-x-4 mt-8">
                <button id="saveProfile" class="btn-primary flex-1 py-3 px-6 rounded-xl text-white font-semibold">
                  Save Profile
                </button>
                <button id="cancelProfile" class="border-2 border-gray-300 hover:bg-gray-50 py-3 px-6 rounded-xl font-semibold transition-colors">
                  Cancel
                </button>
              </div>
            </div>
          </div>
        </div>
      `;

      // Populate existing data
      const fields = ['fullname', 'email', 'dob', 'gender', 'mobile', 'address', 'aadhaar', 'emg_phone', 'tid'];
      fields.forEach(field => {
        const el = document.getElementById('p_' + field);
        if (el && app.personal[field]) el.value = app.personal[field];
      });

      document.getElementById('closeProfile').onclick = () => modalRoot.innerHTML = '';
      document.getElementById('cancelProfile').onclick = () => modalRoot.innerHTML = '';
      
      document.getElementById('generateTid').onclick = () => {
        const tid = 'SR' + Date.now().toString().slice(-6) + Math.floor(Math.random()*1000);
        document.getElementById('p_tid').value = tid;
        toast('Tourist ID generated!', 'info');
      };
      
      document.getElementById('saveProfile').onclick = () => {
        fields.forEach(field => {
          const el = document.getElementById('p_' + field);
          if (el) app.personal[field] = el.value;
        });
        
        // Check KYC verification
        const requiredFields = ['fullname', 'email', 'dob', 'gender', 'mobile', 'address'];
        const hasRequired = requiredFields.every(field => app.personal[field]);
        const hasIdProof = app.personal.aadhaar;
        
        app.personal.verified = hasRequired && hasIdProof;
        saveAll();
        render();
        modalRoot.innerHTML = '';
        toast('Profile updated successfully!');
      };
    }

    function openMedicalModal() {
      const modalRoot = document.getElementById('modalRoot');
      modalRoot.innerHTML = `
        <div class="fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4">
          <div class="glass-card w-full max-w-lg">
            <div class="p-8">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold text-red-700">
                  <i class="fas fa-heartbeat mr-2"></i>Medical Emergency Information
                </h3>
                <button id="closeMedical" class="text-gray-400 hover:text-gray-600">
                  <i class="fas fa-times"></i>
                </button>
              </div>
              
              <div class="space-y-4">
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Blood Type</label>
                  <select id="med_blood" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-red-500 focus:outline-none">
                    <option value="">Select Blood Type</option>
                    <option value="A+">A+</option>
                    <option value="A-">A-</option>
                    <option value="B+">B+</option>
                    <option value="B-">B-</option>
                    <option value="AB+">AB+</option>
                    <option value="AB-">AB-</option>
                    <option value="O+">O+</option>
                    <option value="O-">O-</option>
                  </select>
                </div>
                
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Known Allergies</label>
                  <textarea id="med_allergies" rows="2" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-red-500 focus:outline-none" 
                            placeholder="e.g. Peanuts, Penicillin, etc."></textarea>
                </div>
                
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Current Medications</label>
                  <textarea id="med_medications" rows="2" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-red-500 focus:outline-none" 
                            placeholder="List any regular medications"></textarea>
                </div>
                
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Emergency Contact</label>
                  <input id="med_emergency" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-red-500 focus:outline-none" 
                         placeholder="Name and phone number" />
                </div>
                
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>SurakshƒÅ - Professional Tourist Safety Platform</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    
    /* Royal Indian Theme Colors */
    :root {
      --saffron: #FF9933;
      --marigold: #FFB74D;
      --deepgold: #B8860B;
      --royalblue: #1E3A8A;
    }

    body { 
      font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial; 
      background: linear-gradient(135deg, #fff8e7 0%, #fff3e0 100%);
      background-attachment: fixed;
    }
    
    /* Royal texture background */
    .royal-texture {
      background-image: url('data:image/svg+xml,<svg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><g fill="%23FFB74D" fill-opacity="0.1"><circle cx="30" cy="30" r="2"/></g></svg>');
    }
    
    #sidebar { 
      width: 280px; 
      min-width: 280px; 
      max-width: 280px; 
      background: linear-gradient(180deg, var(--royalblue) 0%, #1e40af 100%);
      backdrop-filter: blur(20px);
    }
    
    #mainContent { 
      margin-left: 280px; 
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
    }
    
    .nav-item {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      backdrop-filter: blur(10px);
    }
    
    .nav-item:hover {
      background: rgba(255, 153, 51, 0.15);
      transform: translateX(8px);
    }
    
    .nav-item.active {
      background: linear-gradient(90deg, rgba(255, 153, 51, 0.3) 0%, rgba(255, 153, 51, 0.1) 100%);
      border-left: 4px solid var(--saffron);
      transform: translateX(4px);
    }
    
    .glass-card {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 153, 51, 0.2);
      box-shadow: 0 8px 32px rgba(255, 153, 51, 0.15);
      border-radius: 16px;
      transition: all 0.3s ease;
    }

    .glass-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 12px 32px rgba(184, 134, 11, 0.35);
    }
    
    .gradient-saffron {
      background: linear-gradient(135deg, var(--saffron) 0%, var(--marigold) 100%);
    }
    
    .gradient-royalblue {
      background: linear-gradient(135deg, var(--royalblue) 0%, #0f1c3f 100%);
    }
    
    .status-indicator {
      width: 8px;
      height: 8px;
      background: #10b981;
      border-radius: 50%;
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
    
    .metric-card {
      background: linear-gradient(135deg, rgba(255, 153, 51, 0.1), rgba(255, 153, 51, 0.05));
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 153, 51, 0.1);
    }
    
    .btn-primary {
      background: linear-gradient(135deg, var(--saffron) 0%, var(--deepgold) 100%);
      transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
      background: linear-gradient(135deg, var(--marigold) 0%, var(--saffron) 100%);
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(255, 153, 51, 0.3);
    }
    
    .emergency-btn {
      background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
      animation: glow 2s ease-in-out infinite alternate;
    }
    
    @keyframes glow {
      from { box-shadow: 0 0 20px #ef4444; }
      to { box-shadow: 0 0 30px #dc2626, 0 0 40px #dc2626; }
    }
    
    .sidebar-scroll {
      max-height: calc(100vh - 24px);
      overflow-y: auto;
      scrollbar-width: thin;
      scrollbar-color: rgba(255, 153, 51, 0.3) transparent;
    }
    
    .sidebar-scroll::-webkit-scrollbar {
      width: 4px;
    }
    
    .sidebar-scroll::-webkit-scrollbar-track {
      background: transparent;
    }
    
    .sidebar-scroll::-webkit-scrollbar-thumb {
      background: rgba(255, 153, 51, 0.3);
      border-radius: 2px;
    }
    
    .toast {
      position: fixed;
      top: 24px;
      right: 24px;
      z-index: 1000;
      min-width: 300px;
    }
    
    .modal-backdrop {
      background: rgba(15, 23, 42, 0.6);
      backdrop-filter: blur(8px);
    }
    
    .header-gradient {
      background: linear-gradient(135deg, #ffffff 0%, #fff8e7 100%);
      border-bottom: 1px solid rgba(255, 153, 51, 0.1);
    }

    .tracking-toggle {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 30px;
    }

    .tracking-toggle input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: .4s;
      border-radius: 34px;
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 22px;
      width: 22px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: .4s;
      border-radius: 50%;
    }

    input:checked + .slider {
      background: linear-gradient(135deg, var(--saffron) 0%, var(--marigold) 100%);
    }

    input:checked + .slider:before {
      transform: translateX(30px);
    }

    .incident-form {
      max-height: 80vh;
      overflow-y: auto;
    }
    
    @media (max-width: 768px) {
      #sidebar {
        transform: translateX(-100%);
        transition: transform 0.3s ease;
      }
      
      #sidebar.mobile-open {
        transform: translateX(0);
      }
      
      #mainContent {
        margin-left: 0;
      }
    }
  </style>
</head>
<body class="royal-texture">
  <!-- Professional Sidebar Navigation -->
  <aside id="sidebar" class="fixed left-0 top-0 bottom-0 shadow-2xl z-50">
    <div class="sidebar-scroll p-6">
      <!-- Logo & Brand -->
      <div class="mb-8">
        <div class="flex items-center space-x-3 mb-2">
          <div class="w-12 h-12 gradient-saffron rounded-xl flex items-center justify-center shadow-lg">
            <i class="fas fa-shield-alt text-white text-xl"></i>
          </div>
          <div>
            <h1 class="text-xl font-bold text-white">SurakshƒÅ</h1>
            <p class="text-blue-200 text-xs">Tourist Safety Platform</p>
          </div>
        </div>
        <div class="flex items-center space-x-2 text-blue-200 text-xs">
          <div class="status-indicator"></div>
          <span>System Online</span>
        </div>
      </div>

      <!-- User Profile Card -->
      <div id="profileCard" class="glass-card p-4 mb-6 bg-white/10 border-white/20">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 gradient-saffron rounded-full flex items-center justify-center">
            <span id="userInitials" class="text-white font-semibold text-sm">U</span>
          </div>
          <div class="flex-1">
            <div id="userName" class="text-white font-medium text-sm">Guest User</div>
            <div id="userStatus" class="text-blue-200 text-xs">Complete profile for full access</div>
          </div>
        </div>
        <div class="mt-3 flex items-center justify-between">
          <span id="kycStatus" class="px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded-full">KYC Pending</span>
          <button id="editProfile" class="text-blue-200 hover:text-white text-xs">
            <i class="fas fa-edit"></i>
          </button>
        </div>
      </div>

      <!-- Medical Info Summary -->
      <div id="medicalSummary" class="mb-6 p-4 rounded-xl bg-red-500/10 border border-red-400/30">
        <div class="flex items-center justify-between mb-2">
          <div class="flex items-center space-x-2">
            <i class="fas fa-heartbeat text-red-400"></i>
            <span class="text-red-300 font-medium text-sm">Medical Profile</span>
          </div>
          <button id="editMedical" class="text-red-300 hover:text-white text-xs">
            <i class="fas fa-edit"></i>
          </button>
        </div>
        <div id="medicalInfo" class="text-red-200 text-xs">
          Status: <span class="text-yellow-300">Pending</span>
        </div>
        <div class="text-red-200 text-xs mt-1">
          Click to add critical medical information
        </div>
      </div>

      <!-- Navigation Menu -->
      <nav class="space-y-2 mb-8">
        <div class="text-blue-200 text-xs font-semibold uppercase tracking-wider mb-3 px-3">Main Menu</div>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="dashboard">
          <i class="fas fa-tachometer-alt w-5"></i>
          <span class="font-medium">Dashboard</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="map">
          <i class="fas fa-map-marked-alt w-5"></i>
          <span class="font-medium">Live Tracking</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="weather">
          <i class="fas fa-cloud-sun w-5"></i>
          <span class="font-medium">Weather Intel</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="scan">
          <i class="fas fa-search-location w-5"></i>
          <span class="font-medium">Area Analysis</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="incidents">
          <i class="fas fa-exclamation-triangle w-5"></i>
          <span class="font-medium">Incident Reports</span>
          <span id="incidentBadge" class="ml-auto bg-red-500 text-white text-xs px-2 py-1 rounded-full">4</span>
        </button>
        
        <div class="text-blue-200 text-xs font-semibold uppercase tracking-wider mb-3 px-3 mt-6">Trip Management</div>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="plan">
          <i class="fas fa-route w-5"></i>
          <span class="font-medium">Plan Journey</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="saved">
          <i class="fas fa-bookmark w-5"></i>
          <span class="font-medium">Saved Trips</span>
          <span id="savedBadge" class="ml-auto bg-blue-500 text-white text-xs px-2 py-1 rounded-full">2</span>
        </button>
        
        <button class="nav-item w-full text-left px-4 py-3 rounded-xl flex items-center space-x-3 text-white" data-tab="past">
          <i class="fas fa-history w-5"></i>
          <span class="font-medium">Travel History</span>
        </button>
      </nav>

      <!-- Emergency Section -->
      <div class="space-y-3">
        <div class="text-blue-200 text-xs font-semibold uppercase tracking-wider mb-3 px-3">Emergency</div>
        
        <button id="alertsSection" class="nav-item w-full p-4 rounded-xl bg-gradient-to-r from-blue-600/30 to-blue-700/30 border border-blue-400/30 flex items-center justify-between hover:from-blue-500/40 hover:to-blue-600/40">
          <div class="flex items-center space-x-3">
            <i class="fas fa-bell text-blue-300 text-lg"></i>
            <div class="text-white">
              <div class="font-semibold text-sm">Alerts</div>
              <div class="text-blue-200 text-xs">Active notifications</div>
            </div>
          </div>
          <span id="alertsBadge" class="bg-blue-500 text-white px-2 py-1 rounded-full text-xs font-bold">0</span>
        </button>

        <button id="sosSection" class="emergency-btn w-full p-4 rounded-xl text-white flex items-center justify-between">
          <div class="flex items-center space-x-3">
            <i class="fas fa-exclamation-triangle text-white text-lg"></i>
            <div>
              <div class="font-bold text-sm">SOS Emergency</div>
              <div class="text-red-100 text-xs">Immediate assistance</div>
            </div>
          </div>
          <span id="sosBadge" class="bg-white text-red-600 px-2 py-1 rounded-full text-xs font-bold">0</span>
        </button>
      </div>
    </div>
  </aside>

  <!-- Main Content Area -->
  <main id="mainContent" class="min-h-screen">
    <!-- Professional Header -->
    <header class="header-gradient sticky top-0 z-40 px-8 py-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <button id="mobileMenuBtn" class="md:hidden p-2 rounded-lg hover:bg-gray-100">
            <i class="fas fa-bars text-gray-600"></i>
          </button>
          <div>
            <h1 id="pageTitle" class="text-2xl font-bold text-gray-800">Dashboard</h1>
            <p id="pageSubtitle" class="text-sm text-gray-600">Welcome to your safety command center</p>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <!-- Quick Actions -->
          <div class="flex items-center space-x-2">
            <button id="quickLocation" class="p-3 rounded-xl bg-orange-50 hover:bg-orange-100 transition-colors">
              <i class="fas fa-location-dot" style="color: var(--saffron)"></i>
            </button>
            <button id="quickWeather" class="p-3 rounded-xl bg-green-50 hover:bg-green-100 transition-colors">
              <i class="fas fa-cloud-sun text-green-600"></i>
            </button>
          </div>
          
          <!-- Alert & SOS Icons -->
          <div class="relative">
            <button id="alertsIcon" class="p-3 rounded-xl bg-orange-50 hover:bg-orange-100 transition-all">
              <i class="fas fa-bell" style="color: var(--saffron)"></i>
            </button>
            <span id="alertsCount" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs px-2 py-1 rounded-full font-bold min-w-[20px] text-center">0</span>
          </div>
          
          <div class="relative">
            <button id="sosIcon" class="p-3 rounded-xl bg-red-500 text-white hover:bg-red-600 transition-all emergency-btn">
              <i class="fas fa-exclamation-triangle"></i>
            </button>
            <span id="sosCount" class="absolute -top-1 -right-1 bg-green-500 text-white text-xs px-2 py-1 rounded-full font-bold min-w-[20px] text-center">0</span>
          </div>
        </div>
      </div>
    </header>

    <!-- Content Container -->
    <div id="contentContainer" class="p-8">
      <!-- Content will be injected here -->
    </div>
  </main>

  <!-- Modal Root -->
  <div id="modalRoot"></div>

  <!-- Toast Container -->
  <div id="toast" class="toast"></div>

  <script>
    /* ---------- Application State ---------- */
    const app = {
      tab: 'dashboard',
      alerts: JSON.parse(localStorage.getItem('app_alerts')||'[]'),
      sosCount: 0,
      personal: JSON.parse(localStorage.getItem('app_personal')||'{}'),
      medical: JSON.parse(localStorage.getItem('app_medical')||'{}'),
      savedTrips: JSON.parse(localStorage.getItem('app_savedTrips')||'[]'),
      pastTrips: JSON.parse(localStorage.getItem('app_pastTrips')||'[]'),
      incidents: JSON.parse(localStorage.getItem('app_incidents')||'null') || null,
      locationTracking: JSON.parse(localStorage.getItem('app_locationTracking')||'true')
    };

    /* ---------- Utility Functions ---------- */
    function saveAll() {
      localStorage.setItem('app_alerts', JSON.stringify(app.alerts));
      localStorage.setItem('app_personal', JSON.stringify(app.personal));
      localStorage.setItem('app_medical', JSON.stringify(app.medical));
      localStorage.setItem('app_savedTrips', JSON.stringify(app.savedTrips));
      localStorage.setItem('app_pastTrips', JSON.stringify(app.pastTrips));
      localStorage.setItem('app_locationTracking', JSON.stringify(app.locationTracking));
      if (app.incidents) localStorage.setItem('app_incidents', JSON.stringify(app.incidents));
      updateUI();
    }

    function toast(msg, type = 'success') {
      const colors = {
        success: 'bg-green-500',
        error: 'bg-red-500',
        warning: 'bg-orange-500',
        info: 'bg-blue-500'
      };
      
      const toastEl = document.getElementById('toast');
      const div = document.createElement('div');
      div.className = `${colors[type]} text-white px-6 py-4 rounded-xl mb-3 shadow-lg backdrop-blur transform transition-all duration-300 scale-95 opacity-0`;
      div.innerHTML = `
        <div class="flex items-center space-x-3">
          <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'times' : type === 'warning' ? 'exclamation' : 'info'}-circle"></i>
          <span class="font-medium">${msg}</span>
        </div>
      `;
      
      toastEl.appendChild(div);
      
      // Animate in
      setTimeout(() => {
        div.classList.remove('scale-95', 'opacity-0');
        div.classList.add('scale-100', 'opacity-100');
      }, 100);
      
      // Remove after delay
      setTimeout(() => {
        div.classList.add('scale-95', 'opacity-0');
        setTimeout(() => div.remove(), 300);
      }, 4000);
    }

    function uid() { 
      return Date.now().toString(36) + Math.floor(Math.random()*1000); 
    }

    function updateUI() {
      const alertCount = app.alerts.length || 0;
      const sosCountVal = app.sosCount || 0;
      
      // Update all counters
      document.getElementById('alertsCount').textContent = alertCount;
      document.getElementById('alertsBadge').textContent = alertCount;
      document.getElementById('sosCount').textContent = sosCountVal;
      document.getElementById('sosBadge').textContent = sosCountVal;
      document.getElementById('savedBadge').textContent = app.savedTrips.length;
      
      // Update profile
      updateProfileCard();
      updateMedicalSummary();
    }

    function updateProfileCard() {
      const name = app.personal.fullname || 'Guest User';
      const initials = name.split(' ').map(n => n[0]).join('').toUpperCase() || 'GU';
      
      document.getElementById('userName').textContent = name;
      document.getElementById('userInitials').textContent = initials;
      
      const kycStatus = document.getElementById('kycStatus');
      if (app.personal.verified) {
        kycStatus.textContent = 'KYC Verified';
        kycStatus.className = 'px-2 py-1 bg-green-500/20 text-green-300 text-xs rounded-full';
        document.getElementById('userStatus').textContent = 'Profile verified and active';
      } else {
        kycStatus.textContent = 'KYC Pending';
        kycStatus.className = 'px-2 py-1 bg-yellow-500/20 text-yellow-300 text-xs rounded-full';
        document.getElementById('userStatus').textContent = 'Complete profile for full access';
      }
    }

    function updateMedicalSummary() {
      const medInfo = document.getElementById('medicalInfo');
      const med = app.medical;
      
      if (med.blood || med.allergies || med.conditions) {
        const parts = [];
        if (med.blood) parts.push(`Blood: ${med.blood}`);
        if (med.allergies) parts.push(`Allergies: ${med.allergies.slice(0, 20)}...`);
        if (med.conditions) parts.push(`Conditions noted`);
        medInfo.innerHTML = `Status: <span class="text-green-300">Complete</span><br/>${parts.join(' ‚Ä¢ ')}`;
      } else {
        medInfo.innerHTML = 'Status: <span class="text-yellow-300">Pending</span>';
      }
    }

    /* ---------- Content Renderers ---------- */
    function render() {
      updateUI();
      updateNavHighlight();
      updatePageHeader();
      
      const container = document.getElementById('contentContainer');
      
      switch(app.tab) {
        case 'dashboard': container.innerHTML = renderDashboardTab(); break;
        case 'map': container.innerHTML = renderMapTab(); break;
        case 'weather': container.innerHTML = renderWeatherTab(); break;
        case 'scan': container.innerHTML = renderScanTab(); break;
        case 'incidents': container.innerHTML = renderIncidentsTab(); break;
        case 'plan': container.innerHTML = renderPlanTripTab(); break;
        case 'saved': container.innerHTML = renderSavedTripsTab(); break;
        case 'past': container.innerHTML = renderPastTripsTab(); break;
        case 'alerts': container.innerHTML = renderAlertsTab(); break;
        case 'sos': container.innerHTML = renderSosTab(); break;
        default: container.innerHTML = renderDashboardTab();
      }
      
      attachContentHandlers();
    }

    function updateNavHighlight() {
      document.querySelectorAll('.nav-item').forEach(btn => {
        btn.classList.remove('active');
        if (btn.dataset.tab === app.tab) {
          btn.classList.add('active');
        }
      });
    }

    function updatePageHeader() {
      const titles = {
        dashboard: { title: 'Dashboard', subtitle: 'Your safety command center overview' },
        map: { title: 'Live Tracking', subtitle: 'Real-time location monitoring and navigation' },
        weather: { title: 'Weather Intelligence', subtitle: 'Weather data and forecasting for safe travel' },
        scan: { title: 'Area Analysis', subtitle: 'Comprehensive safety assessment of your location' },
        incidents: { title: 'Incident Reports', subtitle: 'Latest safety incidents and community reports' },
        plan: { title: 'Journey Planner', subtitle: 'Plan and organize your trips safely' },
        saved: { title: 'Saved Trips', subtitle: 'Your planned and upcoming journeys' },
        past: { title: 'Travel History', subtitle: 'Previous trips and travel memories' },
        alerts: { title: 'Alerts Center', subtitle: 'All notifications and safety alerts' },
        sos: { title: 'Emergency Center', subtitle: 'Immediate assistance and emergency contacts' }
      };
      
      const current = titles[app.tab] || titles.dashboard;
      document.getElementById('pageTitle').textContent = current.title;
      document.getElementById('pageSubtitle').textContent = current.subtitle;
    }

    function renderMapTab() {
      const universityQuery = encodeURIComponent("J C Bose University of Science and Technology YMCA Faridabad");
      return `
        <div class="grid lg:grid-cols-3 gap-8">
          <div class="lg:col-span-2">
            <div class="glass-card p-6">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold text-gray-800">Live Location Tracking</h3>
                <div class="flex items-center space-x-4">
                  <div class="flex items-center space-x-2">
                    <span class="text-sm font-medium text-gray-700">Location Tracking:</span>
                    <label class="tracking-toggle">
                      <input type="checkbox" id="trackingToggle" ${app.locationTracking ? 'checked' : ''}>
                      <span class="slider"></span>
                    </label>
                  </div>
                  <div class="flex items-center space-x-2">
                    <div class="status-indicator ${app.locationTracking ? '' : 'bg-gray-400'}"></div>
                    <span class="text-sm text-gray-600">${app.locationTracking ? 'Active' : 'Inactive'}</span>
                  </div>
                </div>
              </div>
              
              <div class="h-96 rounded-xl overflow-hidden border-2 border-gray-200 shadow-inner ${!app.locationTracking ? 'opacity-50' : ''}">
                ${app.locationTracking ? `
                  <iframe
                    width="100%" height="100%" style="border:0"
                    loading="lazy"
                    src="https://www.google.com/maps?q=${universityQuery}&output=embed">
                  </iframe>
                ` : `
                  <div class="flex items-center justify-center h-full bg-gray-100">
                    <div class="text-center">
                      <i class="fas fa-location-slash text-gray-400 text-6xl mb-4"></i>
                      <p class="text-gray-600 text-lg">Location tracking is disabled</p>
                      <p class="text-gray-500 text-sm">Enable tracking to see your location</p>
                    </div>
                  </div>
                `}
              </div>
              
              <div class="mt-6 grid md:grid-cols-3 gap-4">
                <button id="requestLocation" class="btn-primary py-3 px-4 rounded-xl text-white font-medium" ${!app.locationTracking ? 'disabled' : ''}>
                  <i class="fas fa-location-dot mr-2"></i>Get Live Location
                </button>
                <button class="py-3 px-4 rounded-xl border-2 border-gray-200 hover:border-gray-300 transition-colors" ${!app.locationTracking ? 'disabled' : ''}>
                  <i class="fas fa-route mr-2"></i>Get Directions
                </button>
                <button class="py-3 px-4 rounded-xl border-2 border-gray-200 hover:border-gray-300 transition-colors" ${!app.locationTracking ? 'disabled' : ''}>
                  <i class="fas fa-share-alt mr-2"></i>Share Location
                </button>
              </div>
            </div>
          </div>

          <div class="space-y-6">
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Location Details</h3>
              <div class="space-y-4">
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Current Area:</span>
                  <span class="font-semibold">${app.locationTracking ? 'JC Bose University' : 'Unknown'}</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Coordinates:</span>
                  <span class="font-mono text-sm">${app.locationTracking ? '28.4333¬∞N, 77.3167¬∞E' : 'Hidden'}</span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Safety Level:</span>
                  <span class="px-3 py-1 ${app.locationTracking ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-500'} rounded-full text-sm font-medium">
                    ${app.locationTracking ? 'Safe Zone' : 'N/A'}
                  </span>
                </div>
                <div class="flex justify-between items-center">
                  <span class="text-gray-600">Network:</span>
                  <div class="flex items-center space-x-2">
                    <div class="flex space-x-1">
                      <div class="w-2 h-4 ${app.locationTracking ? 'bg-green-500' : 'bg-gray-300'} rounded-sm"></div>
                      <div class="w-2 h-4 ${app.locationTracking ? 'bg-green-500' : 'bg-gray-300'} rounded-sm"></div>
                      <div class="w-2 h-4 ${app.locationTracking ? 'bg-green-500' : 'bg-gray-300'} rounded-sm"></div>
                      <div class="w-2 h-4 bg-gray-300 rounded-sm"></div>
                    </div>
                    <span class="text-sm font-medium">${app.locationTracking ? 'Good' : 'Unknown'}</span>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Nearby Services</h3>
              <div class="space-y-3">
                <div class="flex items-center space-x-3">
                  <i class="fas fa-hospital text-red-500"></i>
                  <div class="flex-1">
                    <div class="font-medium">ESIC Hospital</div>
                    <div class="text-sm text-gray-600">${app.locationTracking ? '2.3 km away' : 'Enable tracking to see'}</div>
                  </div>
                </div>
                <div class="flex items-center space-x-3">
                  <i class="fas fa-shield-alt text-blue-500"></i>
                  <div class="flex-1">
                    <div class="font-medium">Sector 6 Police Station</div>
                    <div class="text-sm text-gray-600">${app.locationTracking ? '1.8 km away' : 'Enable tracking to see'}</div>
                  </div>
                </div>
                <div class="flex items-center space-x-3">
                  <i class="fas fa-fire text-orange-500"></i>
                  <div class="flex-1">
                    <div class="font-medium">Fire Department</div>
                    <div class="text-sm text-gray-600">${app.locationTracking ? '3.1 km away' : 'Enable tracking to see'}</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function renderWeatherTab() {
      // Auto-populate current location if tracking is enabled
      const defaultLocation = app.locationTracking ? 'Faridabad, Haryana' : '';
      
      return `
        <div class="grid lg:grid-cols-3 gap-8">
          <div class="lg:col-span-2 space-y-6">
            <!-- Weather Controls -->
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Weather Forecast</h3>
              <div class="grid md:grid-cols-4 gap-4 mb-6">
                <input id="weather_location" class="px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                       placeholder="Enter location" value="${defaultLocation}" />
                <input id="weather_date" type="date" class="px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                <button id="getWeather" class="btn-primary py-3 px-4 rounded-xl text-white font-medium">
                  Get Weather
                </button>
                <button id="currentLocationWeather" class="py-3 px-4 rounded-xl border-2 border-gray-200 hover:border-gray-300 transition-colors" ${!app.locationTracking ? 'disabled' : ''}>
                  Current Location
                </button>
              </div>
              
              <div id="weatherResult" class="grid md:grid-cols-4 gap-4">
                <!-- Weather data will be populated here -->
              </div>
            </div>
            
            <!-- Weather Alerts -->
            <div id="weatherAlerts" class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Weather Alerts</h3>
              <div class="text-gray-600">Get weather data to see relevant alerts and warnings</div>
            </div>
          </div>
          
          <!-- Weather Sidebar -->
          <div class="space-y-6">
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Current Conditions</h3>
              <div class="text-center">
                <div class="text-4xl font-bold text-gray-800">24¬∞C</div>
                <div class="text-gray-600 mb-4">Partly Cloudy</div>
                <div class="grid grid-cols-2 gap-4 text-sm">
                  <div class="text-center">
                    <div class="font-semibold">Humidity</div>
                    <div class="text-blue-600">65%</div>
                  </div>
                  <div class="text-center">
                    <div class="font-semibold">Wind</div>
                    <div class="text-blue-600">12 km/h</div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Travel Tips</h3>
              <div class="space-y-3 text-sm">
                <div class="p-3 bg-green-50 rounded-lg">
                  <i class="fas fa-check-circle text-green-600 mr-2"></i>
                  Great weather for outdoor activities
                </div>
                <div class="p-3 bg-blue-50 rounded-lg">
                  <i class="fas fa-umbrella text-blue-600 mr-2"></i>
                  Keep a light jacket handy
                </div>
                <div class="p-3 bg-yellow-50 rounded-lg">
                  <i class="fas fa-sun text-yellow-600 mr-2"></i>
                  UV index moderate - use sunscreen
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function renderIncidentsTab() {
      generateMockIncidents();
      return `
        <div class="grid lg:grid-cols-3 gap-8">
          <div class="lg:col-span-2">
            <div class="glass-card p-6">
              <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-bold text-gray-800">Recent Incident Reports</h3>
                <div class="flex items-center space-x-2">
                  <button id="reportIncident" class="btn-primary px-4 py-2 rounded-lg text-white font-medium">
                    <i class="fas fa-plus mr-2"></i>Report Incident
                  </button>
                  <span class="px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm font-medium">
                    ${app.incidents.length} Active
                  </span>
                </div>
              </div>
              
              <div class="space-y-4">
                ${app.incidents.map(incident => `
                  <div class="border border-gray-200 rounded-xl hover:shadow-lg transition-all cursor-pointer bg-white" data-incident="${incident.id}">
                    <div class="p-6">
                      <div class="flex justify-between items-start mb-4">
                        <div class="flex-1">
                          <div class="flex items-center space-x-2 mb-2">
                            <h4 class="font-semibold text-gray-800">${incident.title}</h4>
                            ${incident.userReported ? '<span class="px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs">Your Report</span>' : ''}
                          </div>
                          <div class="flex items-center space-x-4 text-sm text-gray-500 mb-3">
                            <span><i class="fas fa-map-marker-alt mr-1"></i>${incident.place}</span>
                            <span><i class="fas fa-user mr-1"></i>${incident.user}</span>
                            <span><i class="fas fa-calendar mr-1"></i>${incident.date}</span>
                          </div>
                        </div>
                        <button class="btn-primary px-4 py-2 rounded-lg text-white text-sm font-medium" data-open="${incident.id}">
                          View Details
                        </button>
                      </div>
                      <p class="text-gray-600 mb-4 leading-relaxed">${incident.description.slice(0, 150)}...</p>
                      <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-2">
                          <span class="px-2 py-1 ${getIncidentTypeColor(incident.type)} text-xs font-medium rounded-full">${incident.type}</span>
                          <span class="px-2 py-1 bg-red-100 text-red-700 rounded-full text-xs font-medium">${incident.priority} Priority</span>
                        </div>
                        <div class="text-xs text-gray-400">${incident.timeAgo || '3 hours ago'}</div>
                      </div>
                    </div>
                  </div>
                `).join('')}
              </div>
            </div>
          </div>

          <div class="space-y-6">
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Area Reports Summary</h3>
              <div class="space-y-4">
                <div class="text-center p-4 bg-red-50 rounded-xl">
                  <div class="text-3xl font-bold text-red-600">${app.incidents.length}</div>
                  <div class="text-sm text-red-600 font-medium">Total Reports</div>
                </div>
                <div class="text-center p-4 bg-orange-50 rounded-xl">
                  <div class="text-3xl font-bold text-orange-600">${app.incidents.filter(i => i.priority === 'High').length}</div>
                  <div class="text-sm text-orange-600 font-medium">High Priority</div>
                </div>
                <div class="text-center p-4 bg-blue-50 rounded-xl">
                  <div class="text-3xl font-bold text-blue-600">${app.incidents.filter(i => i.userReported).length}</div>
                  <div class="text-sm text-blue-600 font-medium">Your Reports</div>
                </div>
              </div>
            </div>

            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Incident Categories</h3>
              <div class="space-y-3">
                ${['Climate', 'Crime', 'Scam', 'Fraud'].map(category => {
                  const count = app.incidents.filter(i => i.type === category).length;
                  return `
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 ${getIncidentTypeColor(category, true)} rounded-full flex items-center justify-center">
                          <i class="fas ${getIncidentTypeIcon(category)} text-xs"></i>
                        </div>
                        <span class="font-medium text-gray-700">${category}</span>
                      </div>
                      <span class="font-bold text-gray-600">${count}</span>
                    </div>
                  `;
                }).join('')}
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function getIncidentTypeColor(type, background = false) {
      const colors = {
        'Climate': background ? 'bg-blue-100 text-blue-600' : 'bg-blue-100 text-blue-700',
        'Crime': background ? 'bg-red-100 text-red-600' : 'bg-red-100 text-red-700',
        'Scam': background ? 'bg-yellow-100 text-yellow-600' : 'bg-yellow-100 text-yellow-700',
        'Fraud': background ? 'bg-purple-100 text-purple-600' : 'bg-purple-100 text-purple-700',
        'Weather Related': background ? 'bg-blue-100 text-blue-600' : 'bg-blue-100 text-blue-700'
      };
      return colors[type] || 'bg-gray-100 text-gray-700';
    }

    function getIncidentTypeIcon(type) {
      const icons = {
        'Climate': 'fa-cloud-rain',
        'Crime': 'fa-user-secret',
        'Scam': 'fa-exclamation-triangle',
        'Fraud': 'fa-credit-card'
      };
      return icons[type] || 'fa-exclamation';
    }

    function renderDashboardTab() {
      generateMockIncidents();
      
      return `
        <div class="grid lg:grid-cols-3 gap-8">
          <!-- Main Dashboard Cards -->
          <div class="lg:col-span-2 space-y-6">
            <!-- Status Overview -->
            <div class="grid md:grid-cols-3 gap-4">
              <div class="glass-card p-6">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-gray-600 text-sm font-medium">Safety Status</p>
                    <p class="text-2xl font-bold text-green-600">Safe</p>
                  </div>
                  <div class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center">
                    <i class="fas fa-shield-check text-green-600 text-xl"></i>
                  </div>
                </div>
                <div class="mt-4 flex items-center space-x-2">
                  <div class="status-indicator"></div>
                  <span class="text-xs text-gray-500">Last updated: Just now</span>
                </div>
              </div>
              
              <div class="glass-card p-6">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-gray-600 text-sm font-medium">Active Alerts</p>
                    <p class="text-2xl font-bold" style="color: var(--saffron)">${app.alerts.length}</p>
                  </div>
                  <div class="w-12 h-12 rounded-xl flex items-center justify-center" style="background-color: rgba(255, 153, 51, 0.1)">
                    <i class="fas fa-bell text-xl" style="color: var(--saffron)"></i>
                  </div>
                </div>
                <div class="mt-4">
                  <span class="text-xs text-gray-500">${app.alerts.length > 0 ? 'Requires attention' : 'All clear'}</span>
                </div>
              </div>
              
              <div class="glass-card p-6">
                <div class="flex items-center justify-between">
                  <div>
                    <p class="text-gray-600 text-sm font-medium">Planned Trips</p>
                    <p class="text-2xl font-bold text-blue-600">${app.savedTrips.length}</p>
                  </div>
                  <div class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center">
                    <i class="fas fa-route text-blue-600 text-xl"></i>
                  </div>
                </div>
                <div class="mt-4">
                  <span class="text-xs text-gray-500">Ready for adventure</span>
                </div>
              </div>
            </div>
            
            <!-- Quick Location Map -->
            <div class="glass-card p-6">
              <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold text-gray-800">Current Location</h3>
                <div class="flex items-center space-x-2">
                  <div class="status-indicator ${app.locationTracking ? '' : 'bg-gray-400'}"></div>
                  <span class="text-sm text-gray-600">${app.locationTracking ? 'Live' : 'Offline'}</span>
                </div>
              </div>
              
              <div class="h-64 rounded-xl overflow-hidden border border-gray-200 ${!app.locationTracking ? 'opacity-50' : ''}">
                ${app.locationTracking ? `
                  <iframe
                    width="100%" height="100%" style="border:0"
                    loading="lazy"
                    src="https://www.google.com/maps?q=J C Bose University of Science and Technology YMCA Faridabad&output=embed">
                  </iframe>
                ` : `
                  <div class="flex items-center justify-center h-full bg-gray-100">
                    <div class="text-center">
                      <i class="fas fa-location-slash text-gray-400 text-4xl mb-2"></i>
                      <p class="text-gray-600">Location tracking disabled</p>
                    </div>
                  </div>
                `}
              </div>
              
              <div class="mt-4 grid md:grid-cols-2 gap-4">
                <div class="metric-card p-4 rounded-xl">
                  <div class="text-sm text-gray-600">Area Safety Score</div>
                  <div class="text-2xl font-bold text-green-600">${app.locationTracking ? '8.2/10' : 'N/A'}</div>
                </div>
                <div class="metric-card p-4 rounded-xl">
                  <div class="text-sm text-gray-600">Network Strength</div>
                  <div class="text-2xl font-bold text-blue-600">${app.locationTracking ? 'Excellent' : 'Unknown'}</div>
                </div>
              </div>
            </div>
            
            <!-- Recent Incidents -->
            <div class="glass-card p-6">
              <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-semibold text-gray-800">Recent Incidents</h3>
                <button class="hover:text-blue-700 text-sm font-medium" style="color: var(--saffron)" data-tab="incidents">
                  View All <i class="fas fa-arrow-right ml-1"></i>
                </button>
              </div>
              
              <div class="space-y-3">
                ${app.incidents.slice(0, 3).map(incident => `
                  <div class="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                    <div class="w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center">
                      <i class="fas fa-exclamation-triangle text-red-600"></i>
                    </div>
                    <div class="flex-1">
                      <p class="font-medium text-gray-800 text-sm">${incident.title}</p>
                      <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Low risk - University area with good security' : 'Enable location tracking for analysis'}</p>
              </div>

              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Network Coverage</span>
                  <span id="networkScore" class="text-xl font-bold text-blue-600">${app.locationTracking ? '9.1/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="netBar" class="h-3 rounded-full bg-gradient-to-r from-blue-400 to-blue-600" style="width:${app.locationTracking ? '91%' : '0%'}"></div>
                </div>
                <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Excellent 4G/5G coverage throughout the area' : 'Enable location tracking for analysis'}</p>
              </div>

              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Crowd Density</span>
                  <span id="crowdScore" class="text-xl font-bold" style="color: var(--saffron)">${app.locationTracking ? '6.8/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="crowdBar" class="h-3 rounded-full gradient-saffron" style="width:${app.locationTracking ? '68%' : '0%'}"></div>
                </div>
                <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Moderate activity - Peak university hours' : 'Enable location tracking for analysis'}</p>
              </div>
            </div>

            <div class="mt-8 grid grid-cols-2 gap-4">
              <div class="text-center p-4 bg-blue-50 rounded-xl">
                <div class="text-2xl font-bold text-blue-600">${app.locationTracking ? '24/7' : 'N/A'}</div>
                <div class="text-sm text-blue-600">Security Patrol</div>
              </div>
              <div class="text-center p-4 rounded-xl" style="background-color: rgba(255, 153, 51, 0.1)">
                <div class="text-2xl font-bold" style="color: var(--saffron)">${app.locationTracking ? '1.5 min' : 'N/A'}</div>
                <div class="text-sm" style="color: var(--saffron)">Response Time</div>
              </div>
            </div>
          </div>
        </div>
      `;
              </div>

              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Network Coverage</span>
                  <span id="networkScore" class="text-xl font-bold text-blue-600">${app.locationTracking ? '9.1/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="netBar" class="h-3 rounded-full bg-gradient-to-r from-blue-400 to-blue-600" style="width:${app.locationTracking ? '91%' : '0%'}"></div>
                </div>
                <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Excellent 4G/5G coverage throughout the area' : 'Enable location tracking for analysis'}</p>
              </div>

              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Crowd Density</span>
                  <span id="crowdScore" class="text-xl font-bold" style="color: var(--saffron)">${app.locationTracking ? '6.8/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="crowdBar" class="h-3 rounded-full gradient-saffron" style="width:${app.locationTracking ? '68%' : '0%'}"></div>
                </div>
                <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Moderate activity - Peak university hours' : 'Enable location tracking for analysis'}</p>
              </div>
            </div>

            <div class="mt-8 grid grid-cols-2 gap-4">
              <div class="text-center p-4 bg-blue-50 rounded-xl">
                <div class="text-2xl font-bold text-blue-600">${app.locationTracking ? '24/7' : 'N/A'}</div>
                <div class="text-sm text-blue-600">Security Patrol</div>
              </div>
              <div class="text-center p-4 rounded-xl" style="background-color: rgba(255, 153, 51, 0.1)">
                <div class="text-2xl font-bold" style="color: var(--saffron)">${app.locationTracking ? '1.5 min' : 'N/A'}</div>
                <div class="text-sm" style="color: var(--saffron)">Response Time</div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function renderPlanTripTab() {
      return `
        <div class="grid lg:grid-cols-3 gap-8">
          <div class="lg:col-span-2">
            <div class="glass-card p-6">
              <h3 class="text-xl font-bold text-gray-800 mb-6">Plan Your Journey</h3>

              <form id="tripPlanForm" class="space-y-6">
                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Trip Name *</label>
                    <input id="trip_name" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                           placeholder="e.g. Goa Beach Holiday" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Destination *</label>
                    <input id="trip_destination" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                           placeholder="e.g. Goa, India" />
                  </div>
                </div>

                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Start Date *</label>
                    <input id="trip_start" type="date" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">End Date *</label>
                    <input id="trip_end" type="date" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                  </div>
                </div>

                <div class="grid md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Trip Type *</label>
                    <select id="trip_type" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none">
                      <option value="solo">Solo Adventure</option>
                      <option value="family">Family Trip</option>
                      <option value="friends">Friends Trip</option>
                      <option value="business">Business Travel</option>
                      <option value="group">Group Tour</option>
                    </select>
                  </div>
                  <div>
                    <label class="block text-sm font-semibold text-gray-700 mb-2">Transport Mode *</label>
                    <select id="trip_transport" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none">
                      <option value="">Select Transport</option>
                      <option value="flight">Flight</option>
                      <option value="train">Train</option>
                      <option value="bus">Bus</option>
                      <option value="car">Car/Self Drive</option>
                      <option value="bike">Motorcycle</option>
                    </select>
                  </div>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Planned Stops</label>
                  <input id="trip_stops" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                         placeholder="e.g. Mumbai, Pune (comma separated)" />
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">Trip Notes</label>
                  <textarea id="trip_notes" rows="3" class="w-full px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                            placeholder="Special requirements, preferences, etc."></textarea>
                </div>

                <!-- Group Members Section -->
                <div class="border-t pt-6">
                  <h4 class="text-lg font-semibold text-gray-800 mb-4">Travel Companions</h4>
                  
                  <div id="membersList" class="space-y-3 mb-4">
                    <!-- Dynamic member list -->
                  </div>

                  <div class="grid md:grid-cols-3 gap-3">
                    <input id="memberName" placeholder="Member Name" class="px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                    <input id="memberTid" placeholder="Suraksha ID (optional)" class="px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" />
                    <button type="button" id="addMember" class="bg-green-500 hover:bg-green-600 text-white px-4 py-3 rounded-xl font-medium transition-colors">
                      <i class="fas fa-user-plus mr-2"></i>Add Member
                    </button>
                  </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex flex-wrap gap-4 pt-6 border-t">
                  <button type="button" id="saveTripBtn" class="btn-primary flex-1 py-3 px-6 rounded-xl text-white font-semibold">
                    <i class="fas fa-save mr-2"></i>Save Trip
                  </button>
                  <button type="button" id="startJourneyBtn" class="bg-green-500 hover:bg-green-600 flex-1 py-3 px-6 rounded-xl text-white font-semibold transition-colors">
                    <i class="fas fa-play mr-2"></i>Start Journey
                  </button>
                  <button type="button" id="clearTripBtn" class="border-2 border-gray-300 hover:bg-gray-50 py-3 px-6 rounded-xl font-semibold transition-colors">
                    <i class="fas fa-trash mr-2"></i>Clear Form
                  </button>
                </div>
              </form>
            </div>
          </div>

          <!-- Trip Templates Sidebar -->
          <div class="space-y-6">
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Quick Templates</h3>
              <div id="tripTemplates" class="space-y-3">
                <!-- Filled by JavaScript -->
              </div>
            </div>
            
            <div class="glass-card p-6">
              <h3 class="text-lg font-semibold text-gray-800 mb-4">Travel Tips</h3>
              <div class="space-y-3 text-sm">
                <div class="p-3 bg-blue-50 rounded-lg">
                  <i class="fas fa-lightbulb text-blue-600 mr-2"></i>
                  Plan your route in advance for better safety
                </div>
                <div class="p-3 bg-green-50 rounded-lg">
                  <i class="fas fa-users text-green-600 mr-2"></i>
                  Share your itinerary with trusted contacts
                </div>
                <div class="p-3 rounded-lg" style="background-color: rgba(255, 153, 51, 0.1)">
                  <i class="fas fa-first-aid mr-2" style="color: var(--saffron)"></i>
                  Keep emergency contacts readily available
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    function renderSavedTripsTab() {
      return `
        <div class="space-y-6">
          <div class="flex justify-between items-center">
            <h3 class="text-xl font-bold text-gray-800">Your Saved Journeys</h3>
            <span class="px-4 py-2 bg-blue-100 text-blue-700 rounded-full text-sm font-medium">
              ${app.savedTrips.length} trips planned
            </span>
          </div>

          <div id="savedTripsList" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            ${app.savedTrips.map(trip => `
              <div class="glass-card p-6 hover:shadow-xl transition-all">
                <div class="mb-4">
                  <h4 class="text-lg font-semibold text-gray-800 mb-2">${trip.name}</h4>
                  <div class="text-gray-600 mb-1">
                    <i class="fas fa-map-marker-alt mr-2"></i>${trip.destination || 'Destination TBD'}
                  </div>
                  <div class="text-sm text-gray-500">
                    <i class="fas fa-calendar mr-2"></i>${trip.start} ‚Üí ${trip.end}
                  </div>
                </div>
                
                <div class="text-sm text-gray-600 space-y-1 mb-4">
                  <div class="flex items-center">
                    <i class="fas fa-users mr-2 w-4"></i>
                    <span>${trip.type} ‚Ä¢ ${trip.members?.length || 1} travelers</span>
                  </div>
                  <div class="flex items-center">
                    <i class="fas fa-route mr-2 w-4"></i>
                    <span>${trip.transport || 'Transport TBD'}</span>
                  </div>
                </div>
                
                <div class="flex space-x-2 mb-3">
                  <button class="flex-1 btn-primary py-2 px-3 rounded-lg text-white text-sm font-medium" data-read="${trip.id}">
                    <i class="fas fa-eye mr-1"></i>View
                  </button>
                  <button class="px-3 py-2 border-2 border-gray-200 hover:border-gray-300 rounded-lg text-sm transition-colors" data-edit="${trip.id}">
                    <i class="fas fa-edit"></i>
                  </button>
                </div>
                
                <div class="flex space-x-2">
                  <button class="flex-1 bg-green-500 hover:bg-green-600 text-white py-2 px-3 rounded-lg text-sm font-medium transition-colors" data-complete="${trip.id}">
                    <i class="fas fa-check mr-1"></i>Complete
                  </button>
                  <button class="px-3 py-2 border-2 border-red-300 text-red-600 hover:bg-red-50 rounded-lg text-sm transition-colors" data-delete="${trip.id}">
                    <i class="fas fa-trash"></i>
                  </button>
                </div>
              </div>
            `).join('')}
          </div>

          ${app.savedTrips.length === 0 ? `
            <div class="glass-card p-12 text-center">
              <div class="text-6xl mb-4">‚úàÔ∏è</div>
              <h3 class="text-xl font-semibold text-gray-800 mb-2">No Saved Trips</h3>
              <p class="text-gray-600 mb-6">Start planning your next adventure!</p>
              <button class="btn-primary py-3 px-6 rounded-xl text-white font-semibold" data-tab="plan">
                <i class="fas fa-plus mr-2"></i>Plan Your First Trip
              </button>
            </div>
          ` : ''}
        </div>
      `;
    }

    function renderPastTripsTab() {
      return `
        <div class="space-y-6">
          <div class="flex justify-between items-center">
            <h3 class="text-xl font-bold text-gray-800">Travel Memories</h3>
            <span class="px-4 py-2 bg-purple-100 text-purple-700 rounded-full text-sm font-medium">
              ${app.pastTrips.length} completed journeys
            </span>
          </div>

          <div id="pastTripsList" class="space-y-6">
            ${app.pastTrips.length > 0 ? app.pastTrips.map(trip => `
              <div class="glass-card p-6">
                <div class="flex justify-between items-start mb-4">
                  <div class="flex-1">
                    <h4 class="text-xl font-semibold text-gray-800 mb-2">${trip.name}</h4>
                    <div class="text-gray-600 space-y-1">
                      <div><i class="fas fa-map-marker-alt mr-2"></i>${trip.destination || 'Destination not recorded'}</div>
                      <div><i class="fas fa-calendar mr-2"></i>${trip.start} ‚Üí ${trip.end}</div>
                      <div><i class="fas fa-users mr-2"></i>${trip.type} trip ‚Ä¢ ${trip.members?.length || 1} travelers</div>
                    </div>
                  </div>
                  <div class="flex space-x-2">
                    <button class="btn-primary px-4 py-2 rounded-lg text-white text-sm font-medium" data-viewpast="${trip.id}">
                      <i class="fas fa-eye mr-1"></i>View Details
                    </button>
                    <button class="border-2 border-red-300 text-red-600 hover:bg-red-50 px-4 py-2 rounded-lg text-sm transition-colors" data-deletepast="${trip.id}">
                      <i class="fas fa-trash"></i>
                    </button>
                  </div>
                </div>

                ${trip.notes ? `
                  <div class="mb-4 p-4 bg-gray-50 rounded-lg">
                    <p class="text-gray-700">${trip.notes}</p>
                  </div>
                ` : ''}

                <div class="border-t pt-4">
                  <h5 class="font-semibold text-gray-800 mb-3">Trip Memories & Comments</h5>
                  <div id="comments-${trip.id}" class="space-y-2 mb-4">
                    ${(trip.comments || []).map(comment => `
                      <div class="p-3 bg-blue-50 rounded-lg">
                        <div class="text-gray-700">${comment}</div>
                        <div class="text-xs text-gray-500 mt-1">Added recently</div>
                      </div>
                    `).join('')}
                    ${(trip.comments || []).length === 0 ? '<div class="text-gray-500 italic text-sm">No memories shared yet</div>' : ''}
                  </div>
                  
                  <div class="flex space-x-3">
                    <input id="addComment-${trip.id}" class="flex-1 px-4 py-3 rounded-xl border-2 border-gray-200 focus:border-blue-500 focus:outline-none" 
                           placeholder="Share your memories, photos, experiences..." />
                    <button class="btn-primary px-6 py-3 rounded-xl text-white font-medium" data-addcomment="${trip.id}">
                      <i class="fas fa-plus mr-1"></i>Add Memory
                    </button>
                  </div>
                </div>
              </div>
            `).join('') : `
              <div class="glass-card p-12 text-center">
                <div class="text-6xl mb-4">üìñ</div>
                <h3 class="text-xl font-semibold text-gray-800 mb-2">No Travel History</h3>
                <p class="text-gray-600">Complete your first trip to start building memories!</p>
              </div>
            `}
          </div>
        </div>
      `;
    }

    function renderAlertsTab() {
      return `
        <div class="space-y-6">
          <div class="flex justify-between items-center">
            <h3 class="text-xl font-bold text-gray-800">Notifications Center</h3>
            <button id="clearAllAlerts" class="text-red-600 hover:text-red-800 font-medium">
              <i class="fas fa-trash mr-1"></i>Clear All
            </button>
          </div>

          <div id="alertsList" class="space-y-4">
            ${app.alerts.length > 0 ? app.alerts.slice().reverse().map(alert => `
              <div class="glass-card p-4 ${alert.type === 'emergency' ? 'border-l-4 border-red-500' : 'border-l-4 border-blue-500'}">
                <div class="flex justify-between items-start">
                  <div class="flex items-start space-x-3 flex-1">
                    <div class="w-10 h-10 rounded-full flex items-center justify-center ${alert.type === 'emergency' ? 'bg-red-100' : 'bg-blue-100'}">
                      <i class="fas ${alert.type === 'emergency' ? 'fa-exclamation-triangle text-red-600' : 'fa-bell text-blue-600'}"></i>
                    </div>
                    <div class="flex-1">
                      <div class="font-semibold ${alert.type === 'emergency' ? 'text-red-800' : 'text-gray-800'} mb-1">
                        ${alert.message}
                      </div>
                      <div class="text-sm text-gray-500">${alert.time || 'Just now'}</div>
                    </div>
                  </div>
                  <button class="px-3 py-1 border-2 border-gray-200 hover:bg-gray-50 rounded-lg text-sm transition-colors" data-clear="${alert.id}">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
              </div>
            `).join('') : `
              <div class="glass-card p-12 text-center">
                <div class="text-6xl mb-4">üîî</div>
                <h3 class="text-xl font-semibold text-gray-800 mb-2">All Clear</h3>
                <p class="text-gray-600">No active alerts or notifications</p>
              </div>
            `}
          </div>
        </div>
      `;
    }

    function renderSosTab() {
      const sosOptions = [
        {id: 'medical', label: 'Medical Emergency', emoji: 'üè•', desc: 'Health emergency assistance', color: 'red'},
        {id: 'police', label: 'Security Alert', emoji: 'üëÆ', desc: 'Police and security help', color: 'blue'},
        {id: 'fire', label: 'Fire Emergency', emoji: 'üöí', desc: 'Fire department assistance', color: 'orange'},
        {id: 'network', label: 'Communication Lost', emoji: 'üì∂', desc: 'Network connectivity issues', color: 'purple'},
        {id: 'battery', label: 'Device Emergency', emoji: 'üîã', desc: 'Critical battery level', color: 'yellow'},
        {id: 'general', label: 'General Emergency', emoji: 'üö®', desc: 'Other urgent situations', color: 'gray'}
      ];

      return `
        <div class="space-y-8">
          <div class="text-center glass-card p-6">
            <h3 class="text-2xl font-bold text-red-600 mb-2">Emergency Response Center</h3>
            <p class="text-gray-600">Select emergency type for immediate assistance</p>
          </div>

          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            ${sosOptions.map(option => `
              <button data-sos="${option.id}" class="glass-card p-6 hover:shadow-xl transition-all text-center group border-2 border-transparent hover:border-${option.color}-300">
                <div class="text-5xl mb-4">${option.emoji}</div>
                <div class="font-bold text-gray-800 mb-2 group-hover:text-${option.color}-700">${option.label}</div>
                <div class="text-sm text-gray-600 group-hover:text-${option.color}-600">${option.desc}</div>
                <div class="mt-4 w-full py-2 bg-${option.color}-500 text-white rounded-lg opacity-0 group-hover:opacity-100 transition-opacity">
                  Activate Emergency
                </div>
              </button>
            `).join('')}
          </div>

          <div class="glass-card p-6 bg-yellow-50 border-2 border-yellow-200">
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center">
                <i class="fas fa-info-circle text-yellow-600 text-xl"></i>
              </div>
              <div>
                <h4 class="font-bold text-yellow-800 mb-2">Emergency Contacts</h4>
                <div class="text-sm text-yellow-700 space-y-1">
                  <div><strong>National Emergency:</strong> 112</div>
                  <div><strong>Police:</strong> 100 ‚Ä¢ <strong>Fire:</strong> 101 ‚Ä¢ <strong>Medical:</strong> 108</div>
                  <div><strong>Women Helpline:</strong> 1091 ‚Ä¢ <strong>Child Helpline:</strong> 1098</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    /* ---------- Mock Data Generation ---------- */
    function generateMockIncidents() {
      if (app.incidents) return;
      const sample = [
        {
          id: uid(),
          user: 'RahulSharma',
          place: 'Gate 2, JC Bose University',
          date: '2025-09-15',
          title: 'Heavy Flooding - Main Pathway Blocked',
          type: 'Climate',
          priority: 'High',
          description: 'After continuous rainfall for 6 hours, the main walkway near Gate 2 has been completely flooded. Water level reached 2 feet, making it impossible for students to cross. Several bikes were partially submerged. University maintenance team has been notified and temporary barriers have been placed.',
          userReported: false
        },
        {
          id: uid(),
          user: 'PriyaVerma', 
          place: 'Academic Block A, Sector 6',
          date: '2025-09-12',
          title: 'Large Tree Branch Fallen Due to Storm',
          type: 'Climate',
          priority: 'Medium',
          description: 'A massive tree branch crashed down during last nights storm, completely blocking the path between Academic Block A and the library. The incident occurred around 2 AM due to strong winds. No injuries reported as the area was empty. Civic authorities have been contacted for removal.',
          userReported: false
        },
        {
          id: uid(),
          user: 'AnkitGupta',
          place: 'University Lake Area', 
          date: '2025-09-10',
          title: 'Suspicious Activity Near Lake',
          type: 'Crime',
          priority: 'High',
          description: 'Reported suspicious individuals loitering around the university lake area during evening hours. They were asking students for personal information and money. Security has been alerted and patrols have been increased in the area.',
          userReported: false
        },
        {
          id: uid(),
          user: 'SnehaJoshi',
          place: 'Main Market Road',
          date: '2025-09-08',
          title: 'Fake Currency Exchange Scam',
          type: 'Scam', 
          priority: 'Medium',
          description: 'Several students reported being approached by individuals offering currency exchange at attractive rates. The notes provided were counterfeit. Local police have been informed and students are advised to be cautious.',
          userReported: false
        }
      ];
      app.incidents = sample;
      saveAll();
    }

    /* ---------- Event Handlers ---------- */
    function attachContentHandlers() {
      // Navigation handlers
      document.querySelectorAll('.nav-item[data-tab]').forEach(btn => {
        btn.onclick = () => { 
          app.tab = btn.dataset.tab; 
          render(); 
          window.scrollTo({top: 0, behavior: 'smooth'}); 
        };
      });

      // Location tracking toggle
      const trackingToggle = document.getElementById('trackingToggle');
      if (trackingToggle) {
        trackingToggle.onchange = () => {
          app.locationTracking = trackingToggle.checked;
          saveAll();
          render();
          toast(app.locationTracking ? 'Location tracking enabled' : 'Location tracking disabled', 'info');
        };
      }

      // Current location weather button
      const currentLocationWeather = document.getElementById('currentLocationWeather');
      if (currentLocationWeather) {
        currentLocationWeather.onclick = () => {
          if (app.locationTracking) {
            document.getElementById('weather_location').value = 'Faridabad, Haryana';
            const today = new Date().toISOString().slice(0, 10);
            document.getElementById('weather_date').value = today;
            showWeatherData('Faridabad, Haryana', today);
          }
        };
      }

      // Report incident button
      const reportIncident = document.getElementById('reportIncident');
      if (reportIncident) {
        reportIncident.onclick = () => openIncidentReportModal();
      }

      // Mobile menu
      const mobileMenuBtn = document.getElementById('mobileMenuBtn');
      if (mobileMenuBtn) {
        mobileMenuBtn.onclick = () => {
          document.getElementById('sidebar').classList.toggle('mobile-open');
        };
      }

      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        const sidebar = document.getElementById('sidebar');
        if (!sidebar.contains(e.target) && !document.getElementById('mobileMenuBtn').contains(e.target)) {
          sidebar.classList.remove('mobile-open');
        }
      });

      // Quick action buttons
      const quickLocation = document.getElementById('quickLocation');
      if (quickLocation) {
        quickLocation.onclick = () => {
          app.tab = 'map';
          render();
        };
      }

      const quickWeather = document.getElementById('quickWeather');
      if (quickWeather) {
        quickWeather.onclick = () => {
          app.tab = 'weather';
          render();
        };
      }

      // Alert and SOS handlers
      const alertsSection = document.getElementById('alertsSection');
      if (alertsSection) alertsSection.onclick = () => { app.tab = 'alerts'; render(); };

      const sosSection = document.getElementById('sosSection');
      if (sosSection) sosSection.onclick = () => { app.tab = 'sos'; render(); };

      -gray-500">${incident.place} ‚Ä¢ ${incident.date}</p>
                    </div>
                    <span class="text-xs text-red-600 font-medium">${incident.priority} Priority</span>
                  </div>
                `).join('')}
              </div>
            </div>
          </div>
          
          <!-- Right Sidebar Widgets -->
          <div class="space-y-6">
            <!-- Weather Widget -->
            <div class="glass-card p-6">
              <div class="flex items-center justify-between mb-4">
                <h3 class="font-semibold text-gray-800">Weather Today</h3>
                <button class="hover:text-blue-700" style="color: var(--saffron)" data-tab="weather">
                  <i class="fas fa-external-link-alt"></i>
                </button>
              </div>
              <div class="text-center">
                <div class="text-3xl font-bold text-gray-800">24¬∞C</div>
                <div class="text-gray-600 mb-2">Partly Cloudy</div>
                <div class="flex justify-center space-x-4 text-sm text-gray-500">
                  <span>üå°Ô∏è 18¬∞-28¬∞</span>
                  <span>üí® 12 km/h</span>
                </div>
              </div>
            </div>
            
            <!-- Emergency Contacts -->
            <div class="glass-card p-6">
              <h3 class="font-semibold text-gray-800 mb-4">Emergency Contacts</h3>
              <div class="space-y-3">
                <div class="flex items-center justify-between p-3 bg-red-50 rounded-lg">
                  <div class="flex items-center space-x-3">
                    <i class="fas fa-ambulance text-red-600"></i>
                    <span class="font-medium text-gray-800">Medical</span>
                  </div>
                  <span class="font-bold text-red-600">108</span>
                </div>
                <div class="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
                  <div class="flex items-center space-x-3">
                    <i class="fas fa-shield-alt text-blue-600"></i>
                    <span class="font-medium text-gray-800">Police</span>
                  </div>
                  <span class="font-bold text-blue-600">100</span>
                </div>
                <div class="flex items-center justify-between p-3 rounded-lg" style="background-color: rgba(255, 153, 51, 0.1)">
                  <div class="flex items-center space-x-3">
                    <i class="fas fa-fire" style="color: var(--saffron)"></i>
                    <span class="font-medium text-gray-800">Fire</span>
                  </div>
                  <span class="font-bold" style="color: var(--saffron)">101</span>
                </div>
              </div>
            </div>
            
            <!-- Quick Actions -->
            <div class="glass-card p-6">
              <h3 class="font-semibold text-gray-800 mb-4">Quick Actions</h3>
              <div class="space-y-3">
                <button class="btn-primary w-full py-3 px-4 rounded-xl text-white font-medium" data-tab="plan">
                  <i class="fas fa-plus mr-2"></i>Plan New Trip
                </button>
                <button class="w-full py-3 px-4 rounded-xl border-2 border-gray-200 hover:border-gray-300 transition-colors" data-tab="scan">
                  <i class="fas fa-search-location mr-2"></i>Scan Current Area
                </button>
                <button class="w-full py-3 px-4 rounded-xl border-2 border-gray-200 hover:border-gray-300 transition-colors" id="shareLocation">
                  <i class="fas fa-share-alt mr-2"></i>Share Location
                </button>
              </div>
            </div>
          </div>
        </div>
      `;
    }

    // Continue with remaining functions...
    function renderScanTab() {
      return `
        <div class="grid lg:grid-cols-2 gap-8">
          <div class="glass-card p-6">
            <div class="flex justify-between items-center mb-6">
              <div class="flex items-center space-x-3">
                <div class="w-12 h-12 gradient-saffron rounded-xl flex items-center justify-center shadow-lg">
                  <i class="fas fa-search-location text-white text-xl"></i>
                </div>
                <h3 class="text-xl font-bold text-gray-800">Area Safety Analysis</h3>
              </div>
              <button id="rescanArea" class="btn-primary py-2 px-4 rounded-lg text-white font-medium">
                <i class="fas fa-sync-alt mr-2"></i>Re-scan
              </button>
            </div>
            
            <div class="h-80 rounded-xl overflow-hidden border-2 border-gray-200 mb-6 ${!app.locationTracking ? 'opacity-50' : ''}">
              ${app.locationTracking ? `
                <iframe width="100%" height="100%" style="border:0" loading="lazy"
                  src="https://www.google.com/maps?q=J C Bose University of Science and Technology YMCA Faridabad&output=embed">
                </iframe>
              ` : `
                <div class="flex items-center justify-center h-full bg-gray-100">
                  <div class="text-center">
                    <i class="fas fa-location-slash text-gray-400 text-4xl mb-2"></i>
                    <p class="text-gray-600">Enable location tracking for analysis</p>
                  </div>
                </div>
              `}
            </div>
          </div>

          <div class="glass-card p-6">
            <h3 class="text-xl font-bold text-gray-800 mb-6">Safety Metrics</h3>
            
            <div class="space-y-6">
              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Overall Safety Score</span>
                  <span id="safetyScore" class="text-xl font-bold text-green-600">${app.locationTracking ? '8.2/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="safetyBar" class="h-3 rounded-full gradient-saffron" style="width:${app.locationTracking ? '82%' : '0%'}"></div>
                </div>
                <p class="text-xs text-gray-500 mt-2">${app.locationTracking ? 'Based on recent data and community reports' : 'Enable location tracking for analysis'}</p>
              </div>

              <div>
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-gray-700">Security Risk</span>
                  <span id="scamScore" class="text-xl font-bold text-green-600">${app.locationTracking ? '2.1/10' : 'N/A'}</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-3">
                  <div id="scamBar" class="h-3 rounded-full bg-gradient-to-r from-green-400 to-green-600" style="width:${app.locationTracking ? '21%' : '0%'}"></div>
                </div>
                <p class="text-xs text